{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#gemseo-pymoo","title":"gemseo-pymoo","text":""},{"location":"#overview","title":"Overview","text":"<p>A GEMSEO wrapper for pymoo optimization algorithms.</p>"},{"location":"#installation","title":"Installation","text":"<p>Install the latest version with <code>pip install gemseo-pymoo</code>.</p> <p>See pip for more information.</p>"},{"location":"#bugs-and-questions","title":"Bugs and questions","text":"<p>Please use the gitlab issue tracker to submit bugs or questions.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>See the contributing section of GEMSEO.</p>"},{"location":"#contributors","title":"Contributors","text":"<ul> <li>Gabriel Max DE MENDONCA ABRANTES</li> <li>Francois GALLARD</li> <li>Antoine Dechaume</li> <li>Lluis ARMENGOL GARCIA</li> <li>Luca SARTORI</li> <li>Gilberto RUIZ JIMENEZ</li> </ul>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":"<p>All notable changes of this project will be documented here.</p> <p>The format is based on   Keep a Changelog   and this project adheres to   Semantic Versioning.</p>"},{"location":"changelog/#unreleased","title":"Unreleased","text":""},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li><code>PymooProblem</code> class must now be imported from <code>gemseo_pymoo.algos.opt.core.pymoo_problem</code> (instead of <code>gemseo_pymoo.algos.opt.core.pymoo_problem_adapater</code>).</li> <li>Some <code>PymooProblem</code> class attributes are changed:</li> <li><code>optimization_problem</code> instead of <code>opt_problem</code></li> <li><code>normalize_design_space</code> instead of <code>normalize_ds</code></li> <li><code>max_generations</code> instead of <code>max_gen</code></li> </ul>"},{"location":"changelog/#version-403-september-2025","title":"Version 4.0.3 (September 2025)","text":""},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>The default value of [ScatterParetoPostSettings.points][gemseo_pymoo.post.scatter_pareto_settings.ScatterParetoPostSettings.points]<code>is</code>None`.</li> </ul>"},{"location":"changelog/#version-402-august-2025","title":"Version 4.0.2 (August 2025)","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Support for NumPy v2.</li> <li>Support for Pymoo 0.6.1.5.</li> </ul>"},{"location":"changelog/#version-401-march-2025","title":"Version 4.0.1 (March 2025)","text":""},{"location":"changelog/#changed_2","title":"Changed","text":"<ul> <li>The <code>_new_generation_callback</code> method of the class <code>PymooProblem</code> class no longer   computes the hypervolume for all the generations when there's a reference point change;   instead it computes just the necessary generations for the evaluation.</li> </ul>"},{"location":"changelog/#version-400-november-2024","title":"Version 4.0.0 (November 2024)","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>Support GEMSEO v6.</li> <li>Support for Python 3.12.</li> </ul>"},{"location":"changelog/#removed","title":"Removed","text":"<ul> <li>The function <code>get_gemseo_opt_problem</code> is no longer available.</li> </ul>"},{"location":"changelog/#version-300-march-2024","title":"Version 3.0.0 (March 2024)","text":""},{"location":"changelog/#changed_3","title":"Changed","text":"<ul> <li>The <code>MultiObjectiveOptimizationResult</code> class was moved to <code>gemseo.algos.opt_result_multiobj</code>.</li> <li>The <code>MultiObjectiveOptimizationResult.pareto</code> was renamed to <code>MultiObjectiveOptimizationResult.pareto_front</code>.</li> <li>The <code>Pareto</code> class was moved to <code>gemseo.algos.pareto</code> and renamed <code>ParetoFront</code>.</li> <li><code>ParetoFront</code> is now a dataclass.</li> <li><code>ParetoFront.problem</code> is now a protected field.</li> <li><code>ParetoFront.front</code> was renamed to <code>ParetoFront.f_optima</code>.</li> <li><code>ParetoFront.set</code> was renamed to <code>ParetoFront.x_optima</code>.</li> <li><code>ParetoFront.utopia</code> was renamed to <code>ParetoFront.f_utopia</code>.</li> <li><code>ParetoFront.anti_utopia</code> was renamed to <code>ParetoFront.f_anti_utopia</code>.</li> <li><code>ParetoFront.anchor_front</code> was renamed to <code>ParetoFront.f_anchors</code>.</li> <li><code>ParetoFront.anchor_set</code> was renamed to <code>ParetoFront.x_anchors</code>.</li> <li><code>ParetoFront.min_norm_f</code> was renamed to <code>ParetoFront.f_utopia_neighbors</code>.</li> <li><code>ParetoFront.min_norm_x</code> was renamed to <code>ParetoFront.x_utopia_neighbors</code>.</li> <li><code>ParetoFront.min_norm</code> was renamed to <code>ParetoFront.distance_from_utopia</code>.</li> <li><code>ParetoFront.df_interest</code> was renamed and is now a protected field <code>ParetoFront._anchors_neighbors</code>.</li> </ul>"},{"location":"changelog/#version-200-january-2024","title":"Version 2.0.0 (January 2024)","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Support for Python 3.10 and 3.11.</li> <li>Support for pymoo 0.6.1.</li> </ul>"},{"location":"changelog/#changed_4","title":"Changed","text":"<ul> <li>The <code>diagram</code> option of the <code>MultiObjectiveDiagram</code> is now called   <code>visualization</code> to match Pymoo's naming.</li> <li>The <code>diagram</code> option of the <code>MultiObjectiveDiagram</code> is no longer a   string, it must be a Pymoo <code>Plot</code> instance. This change is due to the   removal of the visualization factory of the Pymoo API.</li> <li>The <code>scalar_name</code> option of the <code>MultiObjectiveDiagram</code> is now called   <code>decomposition</code> to match Pymoo's naming.</li> <li>The <code>scalar_name</code> option of the <code>MultiObjectiveDiagram</code> is no longer a   string, it must be a Pymoo <code>Decomposition</code> instance. This change is due to   the removal of the visualization factory of the Pymoo API.</li> <li>A <code>TypeError</code> is now raised when the scalarization function provided with   the <code>decomposition</code> option is not an instance of Pymoo's <code>Decomposition</code>.   In previous versions, a <code>ValueError</code> was raised.</li> <li><code>PymooOpt.EVOLUTIONARY_OPERATORS</code> is now a dictionary with strings as keys   and Pymoo <code>Operator</code> classes as values.</li> <li>Pymoo <code>0.6.0</code> removed support for evolutionary operator factories.   Therefore, the options <code>sampling</code>, <code>selection</code>, <code>mutation</code> and   <code>crossover</code> must now be instantiated by the user and then passed to the   driver when the problem is executed.</li> </ul>"},{"location":"changelog/#removed_1","title":"Removed","text":"<ul> <li>Support for Python 3.8.</li> <li>Support for pymoo &lt;0.6.1.</li> <li>The <code>SCALARIZATION_FUNCTIONS</code> class variable was removed from   <code>MultiObjectiveDiagram</code>.</li> <li>The <code>EvolutionaryOperatorSimpleOptionsType</code> was removed.</li> <li>The <code>EvolutionaryOperatorOptionsType</code> was removed.</li> <li>The <code>EvolutionaryMixedOperatorTypes</code> was removed.</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>A typo in the <code>Knapsack</code> docstring was corrected.</li> </ul>"},{"location":"changelog/#version-113-october-2023","title":"Version 1.1.3 (October 2023)","text":"<p>Update to GEMSEO 5.1.</p>"},{"location":"changelog/#version-112-june-2023","title":"Version 1.1.2 (June 2023)","text":"<p>Update to GEMSEO 5.</p>"},{"location":"changelog/#version-111-february-2023","title":"Version 1.1.1 (February 2023)","text":""},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>The missing json file to validate the post processor options.</li> <li>The link to the Genetic Algorithm documentation.</li> </ul>"},{"location":"changelog/#version-110-october-2022","title":"Version 1.1.0 (October 2022)","text":""},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li>The termination criterion <code>HyperVolumeToleranceReached</code> is now also     taken into account for single-objective problems.</li> </ul>"},{"location":"changelog/#version-100-july-2022","title":"Version 1.0.0 (July 2022)","text":"<p>First release.</p>"},{"location":"credits/","title":"Credits","text":""},{"location":"credits/#exec-1--credits","title":"Credits","text":"<p>These projects were used to build gemseo-pymoo. Thank you!</p> <p>Python | uv</p>"},{"location":"credits/#exec-1--runtime-dependencies","title":"Runtime dependencies","text":"Project Summary Version (accepted) Version (last resolved) License about-time Easily measure timing and throughput of code blocks, with beautiful human friendly representations. <code>==4.2.1</code> <code>4.2.1</code> MIT alive-progress A new kind of Progress Bar, with real-time throughput, ETA, and very cool animations! <code>3.3.0</code> MIT annotated-types Reusable constraint types to use with typing.Annotated <code>&gt;=0.6.0</code> <code>0.7.0</code> MIT License autograd Efficiently computes derivatives of NumPy code. <code>&gt;=1.4</code> <code>1.8.0</code> MIT License certifi Python package for providing Mozilla's CA Bundle. <code>&gt;=2017.4.17</code> <code>2025.10.5</code> MPL-2.0 charset-normalizer The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet. <code>&gt;=2, &lt;4</code> <code>3.4.4</code> MIT cma CMA-ES, Covariance Matrix Adaptation Evolution Strategy for non-linear numerical optimization in Python <code>&gt;=3.2.2</code> <code>4.4.0</code> BSD-3-Clause colorama Cross-platform colored terminal text. <code>&gt;=0.4</code> <code>0.4.6</code> BSD License contourpy Python library for calculating contours of 2D quadrilateral grids <code>&gt;=1.0.1</code> <code>1.3.3</code> BSD License cycler Composable style cycles <code>&gt;=0.10</code> <code>0.12.1</code> BSD License Deprecated Python @deprecated decorator to deprecate old python classes, functions or methods. <code>1.2.18</code> MIT dill serialize all of Python <code>0.4.0</code> BSD-3-Clause docstring-inheritance Avoid writing and maintaining duplicated docstrings. <code>&gt;=2.0.0, &lt;=2.2.2</code> <code>2.2.2</code> MIT et_xmlfile An implementation of lxml.xmlfile for the standard library <code>2.0.0</code> MIT fastjsonschema Fastest Python implementation of JSON schema <code>&gt;=2.14.5, &lt;=2.21.2</code> <code>2.21.2</code> BSD fonttools Tools to manipulate font files <code>&gt;=4.22.0</code> <code>4.60.1</code> MIT gemseo Generic Engine for Multi-disciplinary Scenarios, Exploration and Optimization <code>&gt;=6, &lt;7</code> <code>6.2.1.dev498+g0651eff2d</code> LGPL-3.0 genson GenSON is a powerful, user-friendly JSON Schema generator. <code>&gt;=1.2.2, &lt;=1.3.0</code> <code>1.3.0</code> MIT graphemeu Unicode grapheme helpers <code>==0.7.2</code> <code>0.7.2</code> ? graphviz Simple Python interface for Graphviz <code>&gt;=0.19, &lt;=0.21</code> <code>0.21</code> MIT h5py Read and write HDF5 files from Python <code>3.14.0</code> BSD-3-Clause idna Internationalized Domain Names in Applications (IDNA) <code>&gt;=2.5, &lt;4</code> <code>3.11</code> BSD-3-Clause Jinja2 A very fast and expressive template engine. <code>&gt;=3.0.0, &gt;=2.11.1, &lt;=3.1.6</code> <code>3.1.6</code> BSD License joblib Lightweight pipelining with Python functions <code>&gt;=1.2.0</code> <code>1.5.2</code> BSD 3-Clause kiwisolver A fast implementation of the Cassowary constraint solver <code>&gt;=1.3.1</code> <code>1.4.9</code> BSD License MarkupSafe Safely add untrusted strings to HTML/XML markup. <code>&gt;=2.0, &gt;=1.1</code> <code>3.0.3</code> BSD-3-Clause matplotlib Python plotting package <code>3.10.6</code> Python Software Foundation License MiniSom Minimalistic implementation of the Self Organizing Maps (SOM) <code>&gt;=2.3.5, &lt;2.4</code> <code>2.3.5</code> MIT mpmath Python library for arbitrary-precision floating-point arithmetic <code>&gt;=1.1.0, &lt;1.4</code> <code>1.3.0</code> BSD narwhals Extremely lightweight compatibility layer between dataframe libraries <code>&gt;=1.15.1</code> <code>2.8.0</code> MIT License networkx Python package for creating and manipulating graphs and networks <code>&gt;=2.5, &lt;=3.5</code> <code>3.5</code> BSD License nlopt Library for nonlinear optimization, wrapping many algorithms for global and local, constrained or unconstrained, optimization <code>&gt;=2.7.0, &lt;=2.9.1</code> <code>2.9.1</code> MIT numpy Fundamental package for array computing in Python <code>2.3.3</code> BSD License openpyxl A Python library to read/write Excel 2010 xlsx/xlsm files <code>&gt;=3.0.10, &lt;=3.1.5</code> <code>3.1.5</code> MIT openturns Uncertainty treatment library <code>&gt;=1.20, &lt;=1.25</code> <code>1.25</code> LGPL packaging Core utilities for Python packages <code>&gt;=20.5, &gt;=15, &lt;=25</code> <code>25.0</code> Apache Software License + BSD License pandas Powerful data structures for data analysis, time series, and statistics <code>2.3.2</code> BSD License pillow Python Imaging Library (Fork) <code>&gt;=9.5.0, &lt;=11.3.0</code> <code>11.3.0</code> MIT-CMU plotly An open-source interactive data visualization library for Python <code>&gt;=5.7.0, &lt;=6.3.0</code> <code>6.3.0</code> MIT License prettytable A simple Python library for easily displaying tabular data in a visually appealing ASCII table format <code>&gt;=2.3.0, &lt;=3.16.0</code> <code>3.16.0</code> BSD-3-Clause psutil Cross-platform lib for process and system monitoring. <code>7.1.0</code> BSD-3-Clause pydantic Data validation using Python type hints <code>&gt;=2.7, &lt;=2.11.9</code> <code>2.11.9</code> MIT pydantic-settings Settings management using Pydantic <code>&gt;=2.1.0, &lt;=2.11.0</code> <code>2.11.0</code> MIT pydantic_core Core functionality for Pydantic validation and serialization <code>==2.33.2</code> <code>2.33.2</code> MIT pyDOE3 Design of experiments for Python <code>&gt;=1.0.1, &lt;=1.4.0</code> <code>1.4.0</code> BSD-3-Clause pymoo Multi-Objective Optimization in Python <code>&gt;=0.6.1, &lt;=0.6.1.5</code> <code>0.6.1.5</code> Apache-2.0 pyparsing pyparsing - Classes and methods to define and execute parsing grammars <code>&gt;=3.0, &gt;=2.3.1</code> <code>3.2.5</code> MIT python-dateutil Extensions to the standard Python datetime module <code>&gt;=2.8.1, &gt;=2.7</code> <code>2.9.0.post0</code> BSD License + Apache Software License python-dotenv Read key-value pairs from a .env file and set them as environment variables <code>&gt;=0.21.0</code> <code>1.1.1</code> BSD-3-Clause pytz World timezone definitions, modern and historical <code>&gt;=2020.1, &gt;=2015.7</code> <code>2025.2</code> MIT pyXDSM Python script to generate PDF XDSM diagrams using TikZ and LaTeX <code>&gt;=2.2.1, &lt;=2.3.1</code> <code>2.3.1</code> Apache License Version 2.0 requests Python HTTP for Humans. <code>&gt;=2.8.1, &gt;2, &lt;3</code> <code>2.32.5</code> Apache-2.0 scikit-learn A set of python modules for machine learning and data mining <code>&gt;=1.2, &lt;=1.7.2</code> <code>1.7.2</code> BSD-3-Clause scipy Fundamental algorithms for scientific computing in Python <code>&gt;=1.12, &lt;=1.15.2</code> <code>1.15.2</code> BSD License six Python 2 and 3 compatibility utilities <code>&gt;=1.5</code> <code>1.17.0</code> MIT spgl1 SPGL1: A solver for large-scale sparse reconstruction. <code>&gt;=0.0.3, &lt;=1.0.0</code> <code>0.0.3</code> GNU Lesser General Public License v3 (LGPLv3) StrEnum An Enum that inherits from str. <code>&gt;=0.4.9, &lt;=0.4.15</code> <code>0.4.15</code> MIT License sympy Computer algebra system (CAS) in Python <code>&gt;=1.5, &lt;=1.14.0</code> <code>1.14.0</code> BSD threadpoolctl threadpoolctl <code>&gt;=3.1.0</code> <code>3.6.0</code> BSD-3-Clause tqdm Fast, Extensible Progress Meter <code>&gt;=4.50, &lt;=4.67.1</code> <code>4.67.1</code> MPL-2.0 AND MIT typing-inspection Runtime typing introspection tools <code>&gt;=0.4.0</code> <code>0.4.2</code> MIT typing_extensions Backported and Experimental Type Hints for Python 3.9+ <code>&gt;=4.0, &gt;=4, &lt;5</code> <code>4.15.0</code> PSF-2.0 tzdata Provider of IANA time zone data <code>&gt;=2022.7</code> <code>2025.2</code> Apache-2.0 urllib3 HTTP library with thread-safe connection pooling, file post, and more. <code>&gt;=1.21.1, &lt;3</code> <code>2.5.0</code> MIT wcwidth Measures the displayed width of unicode strings in a terminal <code>0.2.14</code> MIT wrapt Module for decorators, wrappers and monkey patching. <code>&gt;=1.10, &lt;2</code> <code>1.17.3</code> BSD xdsmjs XDSMjs Python module <code>&gt;=1.0.0, &lt;=2.0.0</code> <code>2.0.0</code> Apache License, Version 2.0 xxhash Python binding for xxHash <code>&gt;=3.0.0, &lt;=3.5.0</code> <code>3.5.0</code> BSD"},{"location":"credits/#exec-1--development-dependencies","title":"Development dependencies","text":"Project Summary Version (accepted) Version (last resolved) License babel Internationalization utilities <code>~=2.10</code> <code>2.17.0</code> BSD-3-Clause backrefs A wrapper around re and regex that adds additional back references. <code>~=5.7.post1</code> <code>5.9</code> MIT black The uncompromising code formatter. <code>25.9.0</code> MIT bracex Bash style brace expander. <code>&gt;=2.1.1</code> <code>2.6</code> MIT certifi Python package for providing Mozilla's CA Bundle. <code>&gt;=2017.4.17</code> <code>2025.10.5</code> MPL-2.0 charset-normalizer The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet. <code>&gt;=2, &lt;4</code> <code>3.4.4</code> MIT click Composable command line interface toolkit <code>&gt;=7.0</code> <code>8.3.0</code> BSD-3-Clause colorama Cross-platform colored terminal text. <code>&gt;=0.4</code> <code>0.4.6</code> BSD License fieldz Utilities for providing compatibility with many dataclass-like libraries <code>&gt;=0.1.0</code> <code>0.1.3</code> BSD-3-Clause ghp-import Copy your docs directly to the gh-pages branch. <code>&gt;=1.0</code> <code>2.1.0</code> Apache Software License griffe Signatures for entire Python programs. Extract the structure, the frame, the skeleton of your project, to generate API documentation or find breaking changes in your API. <code>&gt;=1.13</code> <code>1.14.0</code> ISC griffe-fieldz Griffe extension adding support for data-class like things (pydantic, attrs, etc...) <code>0.3.0</code> BSD-3-Clause griffe-inherited-docstrings Griffe extension for inheriting docstrings. <code>1.1.2</code> ISC idna Internationalized Domain Names in Applications (IDNA) <code>&gt;=2.5, &lt;4</code> <code>3.11</code> BSD-3-Clause importlib_metadata Read metadata from Python packages <code>&gt;=4.6</code> <code>8.7.0</code> Apache Software License importlib_resources Read resources from Python packages <code>6.5.2</code> Apache Software License Jinja2 A very fast and expressive template engine. <code>&gt;=3.0.0, &gt;=2.11.1, &lt;=3.1.6</code> <code>3.1.6</code> BSD License latexcodec A lexer and codec to work with LaTeX code in Python. <code>&gt;=1.0.4</code> <code>3.0.1</code> MIT Markdown Python implementation of John Gruber's Markdown. <code>&gt;=3.6</code> <code>3.9</code> BSD-3-Clause markdown-exec Utilities to execute code blocks in Markdown files. <code>1.11.0</code> ISC MarkupSafe Safely add untrusted strings to HTML/XML markup. <code>&gt;=2.0, &gt;=1.1</code> <code>3.0.3</code> BSD-3-Clause mergedeep A deep merge function for \ud83d\udc0d. <code>&gt;=1.3.4</code> <code>1.3.4</code> MIT License mike Manage multiple versions of your MkDocs-powered documentation <code>2.1.3</code> BSD-3-Clause mkdocs Project documentation with Markdown. <code>&gt;=1.2</code> <code>1.6.1</code> BSD-2-Clause mkdocs-autorefs Automatically link across pages in MkDocs. <code>&gt;=1.4</code> <code>1.4.3</code> ISC mkdocs-bibtex An MkDocs plugin that enables managing citations with BibTex <code>4.4.0</code> BSD-3-Clause-LBNL mkdocs-gallery a <code>mkdocs</code> plugin to generate example galleries from python scripts, similar to <code>sphinx-gallery</code>. <code>0.10.4</code> BSD 3-Clause mkdocs-gen-files MkDocs plugin to programmatically generate documentation pages during the build <code>0.5.0</code> MIT mkdocs-get-deps MkDocs extension that lists all dependencies according to a mkdocs.yml file <code>&gt;=0.2.0</code> <code>0.2.0</code> MIT mkdocs-include-markdown-plugin Mkdocs Markdown includer plugin. <code>7.2.0</code> Apache-2.0 mkdocs-literate-nav MkDocs plugin to specify the navigation in Markdown instead of YAML <code>0.6.2</code> MIT mkdocs-material Documentation that simply works <code>9.6.21</code> MIT mkdocs-material-extensions Extension pack for Python Markdown and MkDocs Material. <code>~=1.3</code> <code>1.3.1</code> MIT mkdocs-section-index MkDocs plugin to allow clickable sections that lead to an index page <code>0.3.10</code> MIT mkdocstrings Automatic documentation from sources, for MkDocs. <code>0.30.1</code> ISC mkdocstrings-python A Python handler for mkdocstrings. <code>&gt;=1.16.2</code> <code>1.18.2</code> ISC mypy_extensions Type system extensions for programs checked with the mypy type checker. <code>&gt;=0.4.3</code> <code>1.1.0</code> MIT packaging Core utilities for Python packages <code>&gt;=20.5, &gt;=15, &lt;=25</code> <code>25.0</code> Apache Software License + BSD License paginate Divides large result sets into pages for easier browsing <code>~=0.5</code> <code>0.5.7</code> MIT pathspec Utility library for gitignore style pattern matching of file paths. <code>&gt;=0.11.1</code> <code>0.12.1</code> Mozilla Public License 2.0 (MPL 2.0) platformdirs A small Python package for determining appropriate platform-specific dirs, e.g. a <code>user data dir</code>. <code>&gt;=2.2.0</code> <code>4.5.0</code> MIT pybtex A BibTeX-compatible bibliography processor in Python <code>&gt;=0.22</code> <code>0.25.1</code> MIT Pygments Pygments is a syntax highlighting package written in Python. <code>~=2.16</code> <code>2.19.2</code> BSD-2-Clause pygments-ansi-color <code>&gt;=0.3</code> <code>0.3.0</code> Apache Software License pymdown-extensions Extension pack for Python Markdown. <code>&gt;=6.3</code> <code>10.16.1</code> MIT pypandoc Thin wrapper for pandoc. <code>&gt;=1.5</code> <code>1.15</code> MIT pyparsing pyparsing - Classes and methods to define and execute parsing grammars <code>&gt;=3.0, &gt;=2.3.1</code> <code>3.2.5</code> MIT python-dateutil Extensions to the standard Python datetime module <code>&gt;=2.8.1, &gt;=2.7</code> <code>2.9.0.post0</code> BSD License + Apache Software License pytokens A Fast, spec compliant Python 3.12+ tokenizer that runs on older Pythons. <code>&gt;=0.1.10</code> <code>0.1.10</code> MIT pytz World timezone definitions, modern and historical <code>&gt;=2020.1, &gt;=2015.7</code> <code>2025.2</code> MIT PyYAML YAML parser and emitter for Python <code>&gt;=5.1</code> <code>6.0.3</code> MIT pyyaml_env_tag A custom YAML tag for referencing environment variables in YAML files. <code>&gt;=0.1</code> <code>1.1</code> MIT requests Python HTTP for Humans. <code>&gt;=2.8.1, &gt;2, &lt;3</code> <code>2.32.5</code> Apache-2.0 responses A utility library for mocking out the <code>requests</code> Python library. <code>&gt;=0.25.6</code> <code>0.25.8</code> Apache 2.0 setuptools Easily download, build, install, upgrade, and uninstall Python packages <code>&gt;=68.0.0</code> <code>80.9.0</code> MIT six Python 2 and 3 compatibility utilities <code>&gt;=1.5</code> <code>1.17.0</code> MIT tqdm Fast, Extensible Progress Meter <code>&gt;=4.50, &lt;=4.67.1</code> <code>4.67.1</code> MPL-2.0 AND MIT typing_extensions Backported and Experimental Type Hints for Python 3.9+ <code>&gt;=4.0, &gt;=4, &lt;5</code> <code>4.15.0</code> PSF-2.0 urllib3 HTTP library with thread-safe connection pooling, file post, and more. <code>&gt;=1.21.1, &lt;3</code> <code>2.5.0</code> MIT validators Python Data Validation for Humans\u2122 <code>&gt;=0.19.0</code> <code>0.35.0</code> MIT verspec Flexible version handling <code>0.1.0</code> BSD 2-Clause or Apache-2.0 watchdog Filesystem events monitoring <code>&gt;=2.0</code> <code>6.0.0</code> Apache-2.0 wcmatch Wildcard/glob file name matcher. <code>10.1</code> MIT zipp Backport of pathlib-compatible object wrapper for zip files <code>&gt;=3.20</code> <code>3.23.0</code> MIT"},{"location":"licenses/","title":"Licenses","text":""},{"location":"licenses/#licenses","title":"Licenses","text":""},{"location":"licenses/#gnu-lgpl-v30","title":"GNU LGPL v3.0","text":"<p>The <code>gemseo-pymoo</code> source code is distributed under the GNU LGPL v3.0 license. <pre><code>Copyright 2021 IRT Saint Exup\u00e9ry, https://www.irt-saintexupery.com\n\nThis program is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense version 3 as published by the Free Software Foundation.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with this program; if not, write to the Free Software Foundation,\nInc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n</code></pre></p>"},{"location":"licenses/#bsd-0-clause","title":"BSD 0-Clause","text":"<p>The <code>gemseo-pymoo</code> examples are distributed under the BSD 0-Clause <pre><code>Copyright 2021 IRT Saint Exup\u00e9ry, https://www.irt-saintexupery.com\n\nThis work is licensed under a BSD 0-Clause License.\n\nPermission to use, copy, modify, and/or distribute this software\nfor any purpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\nWARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL\nTHE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT,\nOR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING\nFROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,\nNEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION\nWITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n</code></pre></p>"},{"location":"licenses/#cc-by-sa-40","title":"CC BY-SA 4.0","text":"<p>The <code>gemseo-pymoo</code> documentation is distributed under the CC BY-SA 4.0 license. <pre><code>Copyright 2021 IRT Saint Exup\u00e9ry, https://www.irt-saintexupery.com\n\nThis work is licensed under the Creative Commons Attribution-ShareAlike 4.0\nInternational License. To view a copy of this license, visit\nhttp://creativecommons.org/licenses/by-sa/4.0/ or send a letter to Creative\nCommons, PO Box 1866, Mountain View, CA 94042, USA.\n</code></pre></p>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>gemseo_pymoo<ul> <li>algos<ul> <li>opt<ul> <li>_settings<ul> <li>ga_settings</li> <li>nsga2_settings</li> <li>nsga3_settings</li> <li>rnsga3_settings</li> <li>unsga3_settings</li> </ul> </li> <li>core<ul> <li>pymoo_problem</li> </ul> </li> <li>pymoo</li> </ul> </li> <li>stop_criteria</li> </ul> </li> <li>post<ul> <li>base_pymoo_plot_post_settings</li> <li>base_pymoo_post_settings</li> <li>base_weighted_pymoo_post_algorithms_settings</li> <li>compromise</li> <li>compromise_settings</li> <li>core<ul> <li>decomposition_application</li> <li>multi_objective_diagram</li> <li>plot_features</li> </ul> </li> <li>high_tradeoff</li> <li>high_tradeoff_settings</li> <li>petal</li> <li>petal_settings</li> <li>radar</li> <li>radar_settings</li> <li>scatter_pareto</li> <li>scatter_pareto_settings</li> </ul> </li> <li>problems<ul> <li>analytical<ul> <li>chankong_haimes</li> <li>knapsack</li> <li>viennet</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"reference/gemseo_pymoo/","title":"API documentation","text":""},{"location":"reference/gemseo_pymoo/#gemseo_pymoo","title":"gemseo_pymoo","text":"<p>Pymoo wrapper for GEMSEO.</p>"},{"location":"reference/gemseo_pymoo/algos/","title":"Algos","text":""},{"location":"reference/gemseo_pymoo/algos/#gemseo_pymoo.algos","title":"algos","text":"<p>Pymoo optimization algorithms.</p>"},{"location":"reference/gemseo_pymoo/algos/stop_criteria/","title":"Stop criteria","text":""},{"location":"reference/gemseo_pymoo/algos/stop_criteria/#gemseo_pymoo.algos.stop_criteria","title":"stop_criteria","text":"<p>Termination criteria for pymoo algorithms.</p>"},{"location":"reference/gemseo_pymoo/algos/stop_criteria/#gemseo_pymoo.algos.stop_criteria-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/algos/stop_criteria/#gemseo_pymoo.algos.stop_criteria.DesignSpaceExploredException","title":"DesignSpaceExploredException","text":"<p>               Bases: <code>TerminationCriterion</code></p> <p>Exception raised when the design space has been completely explored.</p>"},{"location":"reference/gemseo_pymoo/algos/stop_criteria/#gemseo_pymoo.algos.stop_criteria.HyperVolumeToleranceReached","title":"HyperVolumeToleranceReached","text":"<p>               Bases: <code>TerminationCriterion</code></p> <p>Exception raised when the hv_tol_rel or hv_tol_abs criteria is reached.</p>"},{"location":"reference/gemseo_pymoo/algos/stop_criteria/#gemseo_pymoo.algos.stop_criteria.MaxGenerationsReached","title":"MaxGenerationsReached","text":"<p>               Bases: <code>TerminationCriterion</code></p> <p>Exception raised when the maximum number of generations is reached.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/","title":"Opt","text":""},{"location":"reference/gemseo_pymoo/algos/opt/#gemseo_pymoo.algos.opt","title":"opt","text":"<p>Pymoo optimization algorithms package.</p> <p>Contains wrappers to pymoo library.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/","title":"Pymoo","text":""},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo","title":"pymoo","text":"<p>Pymoo optimization library wrapper.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooAlgorithmDescription","title":"PymooAlgorithmDescription  <code>dataclass</code>","text":"<pre><code>PymooAlgorithmDescription(\n    library_name: str = \"pymoo\",\n    handle_integer_variables: bool = True,\n    require_grad: bool = False,\n    handle_equality_constraints: bool = False,\n    handle_inequality_constraints: bool = True,\n    positive_constraints: bool = False,\n    for_linear_problems: bool = False,\n    Settings: type[BasePymooSettings] = BasePymooSettings,\n)\n</code></pre> <p>               Bases: <code>OptimizationAlgorithmDescription</code></p> <p>The description of an optimization algorithm from the pymoo library.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooAlgorithmDescription-attributes","title":"Attributes","text":""},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooAlgorithmDescription.Settings","title":"Settings  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>Settings: type[BasePymooSettings] = BasePymooSettings\n</code></pre> <p>\"The option validation model for Gemseo Pymoo optimization library plugin.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt","title":"PymooOpt","text":"<pre><code>PymooOpt(algo_name: str)\n</code></pre> <p>               Bases: <code>BaseOptimizationLibrary[BasePymooSettings]</code></p> <p>Pymoo optimization library interface.</p> <p>See :class:<code>gemseo.algos.opt.optimization_library.OptimizationLibrary</code>.</p> Notes <p>The missing current values of the :class:<code>.DesignSpace</code> attached to the :class:<code>.OptimizationProblem</code> are automatically initialized with the method :meth:<code>.DesignSpace.initialize_missing_current_values</code>.</p> <p>Constructor.</p> <p>Generate the library dict, which contains the list of algorithms with their characteristics:</p> <ul> <li>does it require gradient</li> <li>does it handle equality constraints</li> <li>does it handle inequality constraints</li> </ul> <p>Parameters:</p> <ul> <li> <code>algo_name</code>               (<code>str</code>)           \u2013            <p>The algorithm name.</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>KeyError</code>             \u2013            <p>When the algorithm is not in the library.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/algos/opt/pymoo.py</code> <pre><code>def __init__(self, algo_name: str) -&gt; None:\n    \"\"\"Constructor.\n\n    Generate the library dict, which contains the list\n    of algorithms with their characteristics:\n\n    - does it require gradient\n    - does it handle equality constraints\n    - does it handle inequality constraints\n    \"\"\"\n    super().__init__(algo_name)\n\n    # The design space size (useful for finite discrete problems).\n    self._ds_size = inf\n</code></pre>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt-attributes","title":"Attributes","text":""},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.CROSSOVER_OPERATOR","title":"CROSSOVER_OPERATOR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CROSSOVER_OPERATOR: Final[str] = 'crossover'\n</code></pre> <p>The crossover operator's name.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.EVOLUTIONARY_OPERATORS","title":"EVOLUTIONARY_OPERATORS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>EVOLUTIONARY_OPERATORS: Final[dict[str, Operator]] = {\n    CROSSOVER_OPERATOR: Crossover,\n    MUTATION_OPERATOR: Mutation,\n    SAMPLING_OPERATOR: Sampling,\n    SELECTION_OPERATOR: Selection,\n}\n</code></pre> <p>A dictionary with all evolutionary operators available as keys and their Pymoo classes as values.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.HV_TOL_ABS","title":"HV_TOL_ABS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HV_TOL_ABS: Final[str] = 'hv_tol_abs'\n</code></pre> <p>The tag for the absolute tolerance used in the hypervolume convergence check.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.HV_TOL_REL","title":"HV_TOL_REL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HV_TOL_REL: Final[str] = 'hv_tol_rel'\n</code></pre> <p>The tag for the relative tolerance used in the hypervolume convergence check.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.LIBRARY_NAME","title":"LIBRARY_NAME  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIBRARY_NAME: Final[str] = 'pymoo'\n</code></pre> <p>The library's name.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.MAX_GEN","title":"MAX_GEN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MAX_GEN: Final[str] = 'max_gen'\n</code></pre> <p>The tag for the maximum number of generations allowed.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.MUTATION_OPERATOR","title":"MUTATION_OPERATOR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MUTATION_OPERATOR: Final[str] = 'mutation'\n</code></pre> <p>The mutation operator's name.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.N_PROCESSES","title":"N_PROCESSES  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>N_PROCESSES: Final[str] = 'n_processes'\n</code></pre> <p>The tag for the number of processes to use.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.PYMOO_GA","title":"PYMOO_GA  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PYMOO_GA: Final[str] = 'PYMOO_GA'\n</code></pre> <p>The GEMSEO alias for the Genetic Algorithm.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.PYMOO_NSGA2","title":"PYMOO_NSGA2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PYMOO_NSGA2: Final[str] = 'PYMOO_NSGA2'\n</code></pre> <p>The GEMSEO alias for the Non-dominated Sorting Genetic Algorithm II.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.PYMOO_NSGA3","title":"PYMOO_NSGA3  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PYMOO_NSGA3: Final[str] = 'PYMOO_NSGA3'\n</code></pre> <p>The GEMSEO alias for the Non-dominated Sorting Genetic Algorithm III.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.PYMOO_RNSGA3","title":"PYMOO_RNSGA3  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PYMOO_RNSGA3: Final[str] = 'PYMOO_RNSGA3'\n</code></pre> <p>The GEMSEO alias for the Reference Point Based NSGA-III.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.PYMOO_UNSGA3","title":"PYMOO_UNSGA3  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PYMOO_UNSGA3: Final[str] = 'PYMOO_UNSGA3'\n</code></pre> <p>The GEMSEO alias for the Unified NSGA-III.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.SAMPLING_OPERATOR","title":"SAMPLING_OPERATOR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SAMPLING_OPERATOR: Final[str] = 'sampling'\n</code></pre> <p>The sampling operator's name.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.SELECTION_OPERATOR","title":"SELECTION_OPERATOR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SELECTION_OPERATOR: Final[str] = 'selection'\n</code></pre> <p>The selection operator's name.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.STOP_CRIT_N_HV","title":"STOP_CRIT_N_HV  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>STOP_CRIT_N_HV: Final[str] = 'stop_crit_n_hv'\n</code></pre> <p>The tag for the number of generations to account for in the hypervolume check.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/pymoo/#gemseo_pymoo.algos.opt.pymoo.PymooOpt.pymoo_n_gen","title":"pymoo_n_gen  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pymoo_n_gen: int = 10000000\n</code></pre> <p>The pymoo's termination criterion based on the number of generations.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/_settings/","title":"settings","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/#gemseo_pymoo.algos.opt._settings","title":"_settings","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/ga_settings/","title":"Ga settings","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/ga_settings/#gemseo_pymoo.algos.opt._settings.ga_settings","title":"ga_settings","text":"<p>Settings for the PYMOO GA algorithm.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/_settings/ga_settings/#gemseo_pymoo.algos.opt._settings.ga_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/ga_settings/#gemseo_pymoo.algos.opt._settings.ga_settings.GASettings","title":"GASettings","text":"<p>               Bases: <code>BasePymooSettings</code></p> <p>The settings for the PYMOO GA algorithm.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/_settings/nsga2_settings/","title":"Nsga2 settings","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/nsga2_settings/#gemseo_pymoo.algos.opt._settings.nsga2_settings","title":"nsga2_settings","text":"<p>Settings for the PYMOO NSGA2 algorithm.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/_settings/nsga2_settings/#gemseo_pymoo.algos.opt._settings.nsga2_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/nsga2_settings/#gemseo_pymoo.algos.opt._settings.nsga2_settings.NSGA2Settings","title":"NSGA2Settings","text":"<p>               Bases: <code>BasePymooSettings</code></p> <p>The settings for the PYMOO NSGA2 algorithm.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/_settings/nsga3_settings/","title":"Nsga3 settings","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/nsga3_settings/#gemseo_pymoo.algos.opt._settings.nsga3_settings","title":"nsga3_settings","text":"<p>Settings for the PYMOO NSGA3 algorithm.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/_settings/nsga3_settings/#gemseo_pymoo.algos.opt._settings.nsga3_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/nsga3_settings/#gemseo_pymoo.algos.opt._settings.nsga3_settings.NSGA3Settings","title":"NSGA3Settings","text":"<p>               Bases: <code>BaseScaledPymooAlgorithmsSettings</code></p> <p>The settings for the PYMOO NSGA3 algorithm.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/_settings/rnsga3_settings/","title":"Rnsga3 settings","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/rnsga3_settings/#gemseo_pymoo.algos.opt._settings.rnsga3_settings","title":"rnsga3_settings","text":"<p>Settings for the PYMOO RNSGA3 algorithm.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/_settings/rnsga3_settings/#gemseo_pymoo.algos.opt._settings.rnsga3_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/rnsga3_settings/#gemseo_pymoo.algos.opt._settings.rnsga3_settings.RNSGA3Settings","title":"RNSGA3Settings","text":"<p>               Bases: <code>BasePymooSettings</code></p> <p>The settings for the PYMOO RNSGA3 algorithm.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/_settings/unsga3_settings/","title":"Unsga3 settings","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/unsga3_settings/#gemseo_pymoo.algos.opt._settings.unsga3_settings","title":"unsga3_settings","text":"<p>Settings for the PYMOO UNSGA3 algorithm.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/_settings/unsga3_settings/#gemseo_pymoo.algos.opt._settings.unsga3_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/algos/opt/_settings/unsga3_settings/#gemseo_pymoo.algos.opt._settings.unsga3_settings.UNSGA3Settings","title":"UNSGA3Settings","text":"<p>               Bases: <code>BaseScaledPymooAlgorithmsSettings</code></p> <p>The settings for the PYMOO UNSGA3 algorithm.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/core/","title":"Core","text":""},{"location":"reference/gemseo_pymoo/algos/opt/core/#gemseo_pymoo.algos.opt.core","title":"core","text":"<p>Pymoo optimization algorithms core package.</p> <p>Contains the source code of algorithms developed with pymoo.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/core/pymoo_problem/","title":"Pymoo problem","text":""},{"location":"reference/gemseo_pymoo/algos/opt/core/pymoo_problem/#gemseo_pymoo.algos.opt.core.pymoo_problem","title":"pymoo_problem","text":"<p>An adapter for pymoo :class:<code>~pymoo.core.problem.Problem</code>.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/core/pymoo_problem/#gemseo_pymoo.algos.opt.core.pymoo_problem-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/algos/opt/core/pymoo_problem/#gemseo_pymoo.algos.opt.core.pymoo_problem.PymooProblem","title":"PymooProblem","text":"<pre><code>PymooProblem(\n    optimization_problem: OptimizationProblem,\n    normalize_design_space: bool,\n    driver: BaseOptimizationLibrary,\n    **options: Any\n)\n</code></pre> <p>               Bases: <code>Problem</code></p> <p>Interface between GEMSEO and pymoo optimization problems.</p> <p>It supports multiprocessing.</p> <p>Initialize from a GEMSEO optimization problem.</p> <p>It also sets up a parallel object :class:<code>~gemseo.core.parallel_execution.ParallelExecution</code> for multiprocessing purposes.</p> <p>Parameters:</p> <ul> <li> <code>optimization_problem</code>               (<code>OptimizationProblem</code>)           \u2013            <p>The GEMSEO problem to convert to a pymoo problem.</p> </li> <li> <code>normalize_design_space</code>               (<code>bool</code>)           \u2013            <p>Whether to normalize the design variables.</p> </li> <li> <code>driver</code>               (<code>BaseOptimizationLibrary</code>)           \u2013            <p>The optimization library used to handle the problem.</p> </li> <li> <code>**options</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>The other algorithm options.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/algos/opt/core/pymoo_problem.py</code> <pre><code>def __init__(\n    self,\n    optimization_problem: OptimizationProblem,\n    normalize_design_space: bool,\n    driver: BaseOptimizationLibrary,\n    **options: Any,\n) -&gt; None:\n    \"\"\"Initialize from a GEMSEO optimization problem.\n\n    It also sets up a parallel object\n    :class:`~gemseo.core.parallel_execution.ParallelExecution` for\n    multiprocessing purposes.\n\n    Args:\n        optimization_problem: The GEMSEO problem to convert to a pymoo problem.\n        normalize_design_space: Whether to normalize the design variables.\n        driver: The optimization library used to handle the problem.\n        **options: The other algorithm options.\n    \"\"\"\n    self.optimization_problem = optimization_problem\n    self.normalize_design_space = normalize_design_space\n    self._driver = driver\n    self._has_hv_ref_point_changed = False\n\n    # Track the number of generations.\n    self._n_generations = 0\n    self.max_generations = options.pop(\"max_gen\")\n\n    # Track the hypervolume indicator.\n    self._hv_tol_rel = options.pop(\"hv_tol_rel\", 1e-9)\n    self._hv_tol_abs = options.pop(\"hv_tol_abs\", 1e-9)\n    self._stop_crit_n_hv = options.pop(\"stop_crit_n_hv\", 5)\n    self._hv_obj_hist_feasible = []\n    self._hv_history = []\n    self._hv_ref_point = -np_inf * ones(\n        optimization_problem.objective.dim, dtype=float\n    )\n\n    # Set up for parallel execution.\n    n_processes = options.pop(\"n_processes\")\n    if n_processes &gt; 1:\n        LOGGER.info(\n            \"Running Optimization in parallel on n_processes = %d\", n_processes\n        )\n        self._parallel = CallableParallelExecution(\n            [self._worker],\n            n_processes=n_processes,\n            exceptions_to_re_raise=(TerminationCriterion,),\n        )\n    else:\n        self._parallel = None\n\n    # Design variables.\n    design_space = optimization_problem.design_space\n    n_var = design_space.dimension\n    if normalize_design_space:\n        lower_bounds = zeros(n_var)\n        upper_bounds = ones(n_var)\n    else:\n        lower_bounds = design_space.get_lower_bounds()\n        upper_bounds = design_space.get_upper_bounds()\n\n    # Constraints.\n    self._ineq_constraints = tuple(\n        self.optimization_problem.constraints.get_inequality_constraints()\n    )\n\n    super().__init__(\n        n_var=n_var,\n        n_obj=optimization_problem.objective.dim,\n        n_constr=sum(constr.dim for constr in self._ineq_constraints),\n        xl=lower_bounds,\n        xu=upper_bounds,\n        type_var=array([\n            design_space.get_type(var) for var in design_space.variable_names\n        ]),\n        **options,\n    )\n</code></pre>"},{"location":"reference/gemseo_pymoo/algos/opt/core/pymoo_problem/#gemseo_pymoo.algos.opt.core.pymoo_problem.PymooProblem-attributes","title":"Attributes","text":""},{"location":"reference/gemseo_pymoo/algos/opt/core/pymoo_problem/#gemseo_pymoo.algos.opt.core.pymoo_problem.PymooProblem.max_generations","title":"max_generations  <code>instance-attribute</code>","text":"<pre><code>max_generations: int = pop('max_gen')\n</code></pre> <p>The maximum number of generations allowed.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/core/pymoo_problem/#gemseo_pymoo.algos.opt.core.pymoo_problem.PymooProblem.normalize_design_space","title":"normalize_design_space  <code>instance-attribute</code>","text":"<pre><code>normalize_design_space: bool = normalize_design_space\n</code></pre> <p>Whether the design space is normalized.</p>"},{"location":"reference/gemseo_pymoo/algos/opt/core/pymoo_problem/#gemseo_pymoo.algos.opt.core.pymoo_problem.PymooProblem.optimization_problem","title":"optimization_problem  <code>instance-attribute</code>","text":"<pre><code>optimization_problem: OptimizationProblem = (\n    optimization_problem\n)\n</code></pre> <p>The GEMSEO optimization problem.</p>"},{"location":"reference/gemseo_pymoo/post/","title":"Post","text":""},{"location":"reference/gemseo_pymoo/post/#gemseo_pymoo.post","title":"post","text":"<p>Post-processing and analysis for pymoo library.</p>"},{"location":"reference/gemseo_pymoo/post/base_pymoo_plot_post_settings/","title":"Base pymoo plot post settings","text":""},{"location":"reference/gemseo_pymoo/post/base_pymoo_plot_post_settings/#gemseo_pymoo.post.base_pymoo_plot_post_settings","title":"base_pymoo_plot_post_settings","text":"<p>Settings for post-processing.</p>"},{"location":"reference/gemseo_pymoo/post/base_pymoo_plot_post_settings/#gemseo_pymoo.post.base_pymoo_plot_post_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/base_pymoo_plot_post_settings/#gemseo_pymoo.post.base_pymoo_plot_post_settings.BasePlotPostSettings","title":"BasePlotPostSettings","text":"<p>               Bases: <code>BasePymooPostSettings</code></p> <p>The settings common to High Tradeoff, Composition and Scatter Pareto.</p> <p>post-processing classes.</p>"},{"location":"reference/gemseo_pymoo/post/base_pymoo_post_settings/","title":"Base pymoo post settings","text":""},{"location":"reference/gemseo_pymoo/post/base_pymoo_post_settings/#gemseo_pymoo.post.base_pymoo_post_settings","title":"base_pymoo_post_settings","text":"<p>Settings for post-processing.</p>"},{"location":"reference/gemseo_pymoo/post/base_pymoo_post_settings/#gemseo_pymoo.post.base_pymoo_post_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/base_pymoo_post_settings/#gemseo_pymoo.post.base_pymoo_post_settings.BasePymooPostSettings","title":"BasePymooPostSettings","text":"<p>               Bases: <code>BasePostSettings</code></p> <p>The settings common to all the gemseo-pymoo post-processing classes.</p>"},{"location":"reference/gemseo_pymoo/post/base_weighted_pymoo_post_algorithms_settings/","title":"Base weighted pymoo post algorithms settings","text":""},{"location":"reference/gemseo_pymoo/post/base_weighted_pymoo_post_algorithms_settings/#gemseo_pymoo.post.base_weighted_pymoo_post_algorithms_settings","title":"base_weighted_pymoo_post_algorithms_settings","text":"<p>Settings for post-processing.</p>"},{"location":"reference/gemseo_pymoo/post/base_weighted_pymoo_post_algorithms_settings/#gemseo_pymoo.post.base_weighted_pymoo_post_algorithms_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/base_weighted_pymoo_post_algorithms_settings/#gemseo_pymoo.post.base_weighted_pymoo_post_algorithms_settings.WeightedPostSettings","title":"WeightedPostSettings","text":"<p>               Bases: <code>BasePymooPostSettings</code></p> <p>The settings common to Compromise, Petal and Radar gemseo-pymoo post-processing.</p> <p>classes.</p>"},{"location":"reference/gemseo_pymoo/post/compromise/","title":"Compromise","text":""},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise","title":"compromise","text":"<p>Compromise points for multi-criteria decision-making.</p>"},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise.Compromise","title":"Compromise","text":"<p>               Bases: <code>ScatterPareto</code></p> <p>Scatter plot with pareto front and compromise points.</p> <p>See <code>Compromise Programming &lt;https://pymoo.org/mcdm/index.html#Compromise-Programming&gt;</code>_.</p>"},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise.Compromise-attributes","title":"Attributes","text":""},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise.Compromise.fig_name_prefix","title":"fig_name_prefix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fig_name_prefix = 'compromise'\n</code></pre> <p>The figure's name prefix.</p>"},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise.Compromise.fig_title","title":"fig_title  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fig_title = 'Compromise Points'\n</code></pre> <p>The figure's title.</p>"},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise.Compromise.font_size","title":"font_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>font_size: int = 9\n</code></pre> <p>The font size for the plot texts.</p>"},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise.Compromise.prop_annotation","title":"prop_annotation  <code>class-attribute</code>","text":"<pre><code>prop_annotation: PlotPropertiesType = {\n    \"fontsize\": font_size - 2,\n    \"ha\": \"center\",\n    \"va\": \"bottom\",\n    \"transform_rotates_text\": True,\n    \"rotation_mode\": \"anchor\",\n}\n</code></pre> <p>The properties for the annotations.</p>"},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise.Compromise.prop_arrow","title":"prop_arrow  <code>class-attribute</code>","text":"<pre><code>prop_arrow: PlotPropertiesType = {\n    \"color\": \"black\",\n    \"alpha\": 0.5,\n    \"arrowstyle\": \"-|&gt;\",\n    \"mutation_scale\": 12,\n}\n</code></pre> <p>The properties for the arrows.</p>"},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise.Compromise.prop_extra","title":"prop_extra  <code>class-attribute</code>","text":"<pre><code>prop_extra: PlotPropertiesType = {\n    \"alpha\": 0.8,\n    \"s\": 30,\n    \"zorder\": 2,\n}\n</code></pre> <p>The properties for the extra points.</p>"},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise.Compromise.prop_front","title":"prop_front  <code>class-attribute</code>","text":"<pre><code>prop_front: PlotPropertiesType = {\n    \"color\": \"blue\",\n    \"alpha\": 0.2,\n    \"s\": 10,\n    \"zorder\": 1,\n}\n</code></pre> <p>The properties for the pareto points.</p>"},{"location":"reference/gemseo_pymoo/post/compromise/#gemseo_pymoo.post.compromise.Compromise.prop_interest","title":"prop_interest  <code>class-attribute</code>","text":"<pre><code>prop_interest: PlotPropertiesType = {\n    \"alpha\": 1.0,\n    \"s\": 30,\n    \"zorder\": 3,\n}\n</code></pre> <p>The properties for the points of interest.</p>"},{"location":"reference/gemseo_pymoo/post/compromise_settings/","title":"Compromise settings","text":""},{"location":"reference/gemseo_pymoo/post/compromise_settings/#gemseo_pymoo.post.compromise_settings","title":"compromise_settings","text":"<p>Settings for post-processing.</p>"},{"location":"reference/gemseo_pymoo/post/compromise_settings/#gemseo_pymoo.post.compromise_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/compromise_settings/#gemseo_pymoo.post.compromise_settings.CompromisePostSettings","title":"CompromisePostSettings","text":"<p>               Bases: <code>BasePlotPostSettings</code>, <code>WeightedPostSettings</code></p> <p>The settings for the Compromise gemseo-pymoo post-processing class.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff/","title":"High tradeoff","text":""},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff","title":"high_tradeoff","text":"<p>High Trade-Off Points for multi-criteria decision-making.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff.HighTradeOff","title":"HighTradeOff","text":"<p>               Bases: <code>ScatterPareto</code></p> <p>Scatter plot with pareto front and high trade-off points.</p> <p>See High Trade-Off Points <code>here&lt;https://pymoo.org/mcdm/index.html#nb-high-tradeoff&gt;</code>_.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff.HighTradeOff-attributes","title":"Attributes","text":""},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff.HighTradeOff.fig_name_prefix","title":"fig_name_prefix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fig_name_prefix = 'high_tradeoff'\n</code></pre> <p>The figure's name prefix.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff.HighTradeOff.fig_title","title":"fig_title  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fig_title = 'High Trade-Off Points'\n</code></pre> <p>The figure's title.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff.HighTradeOff.font_size","title":"font_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>font_size: int = 9\n</code></pre> <p>The font size for the plot texts.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff.HighTradeOff.prop_annotation","title":"prop_annotation  <code>class-attribute</code>","text":"<pre><code>prop_annotation: PlotPropertiesType = {\n    \"fontsize\": font_size - 2,\n    \"ha\": \"center\",\n    \"va\": \"bottom\",\n    \"transform_rotates_text\": True,\n    \"rotation_mode\": \"anchor\",\n}\n</code></pre> <p>The properties for the annotations.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff.HighTradeOff.prop_arrow","title":"prop_arrow  <code>class-attribute</code>","text":"<pre><code>prop_arrow: PlotPropertiesType = {\n    \"color\": \"black\",\n    \"alpha\": 0.5,\n    \"arrowstyle\": \"-|&gt;\",\n    \"mutation_scale\": 12,\n}\n</code></pre> <p>The properties for the arrows.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff.HighTradeOff.prop_extra","title":"prop_extra  <code>class-attribute</code>","text":"<pre><code>prop_extra: PlotPropertiesType = {\n    \"alpha\": 0.8,\n    \"s\": 30,\n    \"zorder\": 2,\n}\n</code></pre> <p>The properties for the extra points.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff.HighTradeOff.prop_front","title":"prop_front  <code>class-attribute</code>","text":"<pre><code>prop_front: PlotPropertiesType = {\n    \"color\": \"blue\",\n    \"alpha\": 0.2,\n    \"s\": 10,\n    \"zorder\": 1,\n}\n</code></pre> <p>The properties for the pareto points.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff/#gemseo_pymoo.post.high_tradeoff.HighTradeOff.prop_interest","title":"prop_interest  <code>class-attribute</code>","text":"<pre><code>prop_interest: dict[str, str] = {\n    \"color\": \"navy\",\n    \"alpha\": 1.0,\n    \"s\": 30,\n    \"zorder\": 3,\n}\n</code></pre> <p>The properties for the points of interest.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff_settings/","title":"High tradeoff settings","text":""},{"location":"reference/gemseo_pymoo/post/high_tradeoff_settings/#gemseo_pymoo.post.high_tradeoff_settings","title":"high_tradeoff_settings","text":"<p>Settings for post-processing.</p>"},{"location":"reference/gemseo_pymoo/post/high_tradeoff_settings/#gemseo_pymoo.post.high_tradeoff_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/high_tradeoff_settings/#gemseo_pymoo.post.high_tradeoff_settings.HighTradeOffPostSettings","title":"HighTradeOffPostSettings","text":"<p>               Bases: <code>BasePlotPostSettings</code></p> <p>The settings for  the High Tradeoff gemseo-pymoo post-processing class.</p>"},{"location":"reference/gemseo_pymoo/post/petal/","title":"Petal","text":""},{"location":"reference/gemseo_pymoo/post/petal/#gemseo_pymoo.post.petal","title":"petal","text":"<p>Petal diagram.</p>"},{"location":"reference/gemseo_pymoo/post/petal/#gemseo_pymoo.post.petal-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/petal/#gemseo_pymoo.post.petal.Petal","title":"Petal","text":"<p>               Bases: <code>MultiObjectiveDiagram</code></p> <p><code>Petal diagrams &lt;https://pymoo.org/visualization/petal.html&gt;</code>_).</p> Note <p>This post-processor assumes the optimization has converged to a well-defined pareto front.</p>"},{"location":"reference/gemseo_pymoo/post/petal/#gemseo_pymoo.post.petal.Petal-attributes","title":"Attributes","text":""},{"location":"reference/gemseo_pymoo/post/petal/#gemseo_pymoo.post.petal.Petal.font_size","title":"font_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>font_size: int = 9\n</code></pre> <p>The font size for the plot texts.</p>"},{"location":"reference/gemseo_pymoo/post/petal_settings/","title":"Petal settings","text":""},{"location":"reference/gemseo_pymoo/post/petal_settings/#gemseo_pymoo.post.petal_settings","title":"petal_settings","text":"<p>Settings for post-processing.</p>"},{"location":"reference/gemseo_pymoo/post/petal_settings/#gemseo_pymoo.post.petal_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/petal_settings/#gemseo_pymoo.post.petal_settings.PetalPostSettings","title":"PetalPostSettings","text":"<p>               Bases: <code>WeightedPostSettings</code></p> <p>The settings for the Petal gemseo-pymoo post-processing class.</p>"},{"location":"reference/gemseo_pymoo/post/radar/","title":"Radar","text":""},{"location":"reference/gemseo_pymoo/post/radar/#gemseo_pymoo.post.radar","title":"radar","text":"<p>Radar plot.</p>"},{"location":"reference/gemseo_pymoo/post/radar/#gemseo_pymoo.post.radar-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/radar/#gemseo_pymoo.post.radar.Radar","title":"Radar","text":"<p>               Bases: <code>MultiObjectiveDiagram</code></p> <p><code>Radar plots &lt;https://pymoo.org/visualization/radar.html&gt;</code>_.</p> Note <p>This post-processor assumes the optimization has converged to a well-defined pareto front.</p>"},{"location":"reference/gemseo_pymoo/post/radar/#gemseo_pymoo.post.radar.Radar-attributes","title":"Attributes","text":""},{"location":"reference/gemseo_pymoo/post/radar/#gemseo_pymoo.post.radar.Radar.font_size","title":"font_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>font_size: int = 9\n</code></pre> <p>The font size for the plot texts.</p>"},{"location":"reference/gemseo_pymoo/post/radar_settings/","title":"Radar settings","text":""},{"location":"reference/gemseo_pymoo/post/radar_settings/#gemseo_pymoo.post.radar_settings","title":"radar_settings","text":"<p>Settings for post-processing.</p>"},{"location":"reference/gemseo_pymoo/post/radar_settings/#gemseo_pymoo.post.radar_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/radar_settings/#gemseo_pymoo.post.radar_settings.RadarPostSettings","title":"RadarPostSettings","text":"<p>               Bases: <code>WeightedPostSettings</code></p> <p>The settings for the Radar gemseo-pymoo post-processing class.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto/","title":"Scatter pareto","text":""},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto","title":"scatter_pareto","text":"<p>Scatter plot for multi-objective optimization problems.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto.ScatterPareto","title":"ScatterPareto","text":"<p>               Bases: <code>BasePost[ScatterParetoPostSettings]</code></p> <p>Scatter plot with pareto points and points of interest.</p> <p>See <code>Scatter &lt;https://pymoo.org/visualization/scatter.html&gt;</code>_.</p> Note <p>This post-processor assumes the optimization has converged to a well-defined pareto front.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto.ScatterPareto-attributes","title":"Attributes","text":""},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto.ScatterPareto.fig_name_prefix","title":"fig_name_prefix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fig_name_prefix: str = 'scatter'\n</code></pre> <p>The figure's name prefix.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto.ScatterPareto.fig_title","title":"fig_title  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fig_title: str = 'Pareto'\n</code></pre> <p>The figure's title.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto.ScatterPareto.font_size","title":"font_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>font_size: int = 9\n</code></pre> <p>The font size for the plot texts.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto.ScatterPareto.prop_annotation","title":"prop_annotation  <code>class-attribute</code>","text":"<pre><code>prop_annotation: PlotPropertiesType = {\n    \"fontsize\": font_size - 2,\n    \"ha\": \"center\",\n    \"va\": \"bottom\",\n    \"transform_rotates_text\": True,\n    \"rotation_mode\": \"anchor\",\n}\n</code></pre> <p>The properties for the annotations.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto.ScatterPareto.prop_arrow","title":"prop_arrow  <code>class-attribute</code>","text":"<pre><code>prop_arrow: PlotPropertiesType = {\n    \"color\": \"black\",\n    \"alpha\": 0.5,\n    \"arrowstyle\": \"-|&gt;\",\n    \"mutation_scale\": 12,\n}\n</code></pre> <p>The properties for the arrows.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto.ScatterPareto.prop_extra","title":"prop_extra  <code>class-attribute</code>","text":"<pre><code>prop_extra: PlotPropertiesType = {\n    \"alpha\": 0.8,\n    \"s\": 30,\n    \"zorder\": 2,\n}\n</code></pre> <p>The properties for the extra points.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto.ScatterPareto.prop_front","title":"prop_front  <code>class-attribute</code>","text":"<pre><code>prop_front: PlotPropertiesType = {\n    \"color\": \"blue\",\n    \"alpha\": 0.2,\n    \"s\": 10,\n    \"zorder\": 1,\n}\n</code></pre> <p>The properties for the pareto points.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto/#gemseo_pymoo.post.scatter_pareto.ScatterPareto.prop_interest","title":"prop_interest  <code>class-attribute</code>","text":"<pre><code>prop_interest: PlotPropertiesType = {\n    \"alpha\": 1.0,\n    \"s\": 30,\n    \"zorder\": 3,\n}\n</code></pre> <p>The properties for the points of interest.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto_settings/","title":"Scatter pareto settings","text":""},{"location":"reference/gemseo_pymoo/post/scatter_pareto_settings/#gemseo_pymoo.post.scatter_pareto_settings","title":"scatter_pareto_settings","text":"<p>Settings for post-processing.</p>"},{"location":"reference/gemseo_pymoo/post/scatter_pareto_settings/#gemseo_pymoo.post.scatter_pareto_settings-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/scatter_pareto_settings/#gemseo_pymoo.post.scatter_pareto_settings.ScatterParetoPostSettings","title":"ScatterParetoPostSettings","text":"<p>               Bases: <code>BasePlotPostSettings</code></p> <p>The settings for  the Scatter Pareto gemseo-pymoo post-processing class.</p>"},{"location":"reference/gemseo_pymoo/post/core/","title":"Core","text":""},{"location":"reference/gemseo_pymoo/post/core/#gemseo_pymoo.post.core","title":"core","text":"<p>Post-processing and analysis for pymoo library.</p>"},{"location":"reference/gemseo_pymoo/post/core/decomposition_application/","title":"Decomposition application","text":""},{"location":"reference/gemseo_pymoo/post/core/decomposition_application/#gemseo_pymoo.post.core.decomposition_application","title":"decomposition_application","text":"<p>Method to apply decomposition to the different post options.</p>"},{"location":"reference/gemseo_pymoo/post/core/decomposition_application/#gemseo_pymoo.post.core.decomposition_application-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/core/multi_objective_diagram/","title":"Multi objective diagram","text":""},{"location":"reference/gemseo_pymoo/post/core/multi_objective_diagram/#gemseo_pymoo.post.core.multi_objective_diagram","title":"multi_objective_diagram","text":"<p>Multi-objective diagram base class.</p>"},{"location":"reference/gemseo_pymoo/post/core/multi_objective_diagram/#gemseo_pymoo.post.core.multi_objective_diagram-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/core/multi_objective_diagram/#gemseo_pymoo.post.core.multi_objective_diagram.MultiObjectiveDiagram","title":"MultiObjectiveDiagram","text":"<p>               Bases: <code>BasePost[WeightedPostSettings]</code></p> <p>Base class for post-processing of multi-objective problems.</p>"},{"location":"reference/gemseo_pymoo/post/core/multi_objective_diagram/#gemseo_pymoo.post.core.multi_objective_diagram.MultiObjectiveDiagram-attributes","title":"Attributes","text":""},{"location":"reference/gemseo_pymoo/post/core/multi_objective_diagram/#gemseo_pymoo.post.core.multi_objective_diagram.MultiObjectiveDiagram.font_size","title":"font_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>font_size: int = 9\n</code></pre> <p>The font size for the plot texts.</p>"},{"location":"reference/gemseo_pymoo/post/core/plot_features/","title":"Plot features","text":""},{"location":"reference/gemseo_pymoo/post/core/plot_features/#gemseo_pymoo.post.core.plot_features","title":"plot_features","text":"<p>Features for scatter plots.</p>"},{"location":"reference/gemseo_pymoo/post/core/plot_features/#gemseo_pymoo.post.core.plot_features-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/post/core/plot_features/#gemseo_pymoo.post.core.plot_features.Annotation3D","title":"Annotation3D","text":"<pre><code>Annotation3D(\n    text: str, xyzs: ndarray, *args: Any, **kwargs: Any\n)\n</code></pre> <p>               Bases: <code>Annotation</code></p> <p>Annotation for 3D plots.</p> <p>Instantiate a 3D annotation.</p> <p>Parameters:</p> <ul> <li> <code>text</code>               (<code>str</code>)           \u2013            <p>The annotation text.</p> </li> <li> <code>xyzs</code>               (<code>ndarray</code>)           \u2013            <p>2D array containing the starting and ending positions of the vector to be annotated.</p> </li> <li> <code>*args</code>               (<code>Any</code>, default:                   <code>()</code> )           \u2013            <p>The arguments for the :class:<code>~matplotlib.text.Annotation</code>.</p> </li> <li> <code>**kwargs</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>The keyword arguments for the :class:<code>~matplotlib.text.Annotation</code>.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/post/core/plot_features.py</code> <pre><code>def __init__(self, text: str, xyzs: ndarray, *args: Any, **kwargs: Any) -&gt; None:\n    \"\"\"Instantiate a 3D annotation.\n\n    Args:\n        text: The annotation text.\n        xyzs: 2D array containing the starting and ending positions of the vector to\n            be annotated.\n        *args: The arguments for the :class:`~matplotlib.text.Annotation`.\n        **kwargs: The keyword arguments\n            for the :class:`~matplotlib.text.Annotation`.\n    \"\"\"\n    Annotation.__init__(self, text, (0, 0), *args, **kwargs)\n    self._vertices_3d = xyzs\n</code></pre>"},{"location":"reference/gemseo_pymoo/post/core/plot_features/#gemseo_pymoo.post.core.plot_features.Annotation3D-functions","title":"Functions","text":""},{"location":"reference/gemseo_pymoo/post/core/plot_features/#gemseo_pymoo.post.core.plot_features.Annotation3D.draw","title":"draw","text":"<pre><code>draw(renderer: RendererBase) -&gt; None\n</code></pre> <p>Update the plot to ensure the right projection of the text.</p> <p>Parameters:</p> <ul> <li> <code>renderer</code>               (<code>RendererBase</code>)           \u2013            <p>The object currently handling the drawing operations.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/post/core/plot_features.py</code> <pre><code>def draw(self, renderer: RendererBase) -&gt; None:\n    \"\"\"Update the plot to ensure the right projection of the text.\n\n    Args:\n        renderer: The object currently handling the drawing operations.\n    \"\"\"\n    xyz0, xyz1 = self._vertices_3d\n    x0, y0, _ = proj3d.proj_transform(*xyz0, self.axes.M)\n    x1, y1, _ = proj3d.proj_transform(*xyz1, self.axes.M)\n    self.set(\n        position=(0.5 * (x1 + x0), 0.5 * (y0 + y1)),\n        rotation=90 if x0 == x1 else degrees(arctan((y1 - y0) / (x1 - x0))),\n    )\n    Annotation.draw(self, renderer)\n</code></pre>"},{"location":"reference/gemseo_pymoo/post/core/plot_features/#gemseo_pymoo.post.core.plot_features.Arrow3D","title":"Arrow3D","text":"<pre><code>Arrow3D(xyzs: ndarray, *args: Any, **kwargs: Any)\n</code></pre> <p>               Bases: <code>FancyArrowPatch</code></p> <p>Arrow patch for 3D plots.</p> <p>Instantiate a 3D arrow.</p> <p>Parameters:</p> <ul> <li> <code>xyzs</code>               (<code>ndarray</code>)           \u2013            <p>2D array containing the starting and ending positions of the arrow.</p> </li> <li> <code>*args</code>               (<code>Any</code>, default:                   <code>()</code> )           \u2013            <p>The arguments for the :class:<code>~matplotlib.patches.FancyArrowPatch</code>.</p> </li> <li> <code>**kwargs</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>The keyword arguments for the :class:<code>~matplotlib.patches.FancyArrowPatch</code>.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/post/core/plot_features.py</code> <pre><code>def __init__(self, xyzs: ndarray, *args: Any, **kwargs: Any) -&gt; None:\n    \"\"\"Instantiate a 3D arrow.\n\n    Args:\n        xyzs: 2D array containing the starting and ending positions of the arrow.\n        *args: The arguments for the :class:`~matplotlib.patches.FancyArrowPatch`.\n        **kwargs: The keyword arguments\n            for the :class:`~matplotlib.patches.FancyArrowPatch`.\n    \"\"\"\n    FancyArrowPatch.__init__(self, (0, 0), (0, 0), *args, **kwargs)\n    self._vertices_3d = xyzs\n</code></pre>"},{"location":"reference/gemseo_pymoo/post/core/plot_features/#gemseo_pymoo.post.core.plot_features.Arrow3D-functions","title":"Functions","text":""},{"location":"reference/gemseo_pymoo/post/core/plot_features/#gemseo_pymoo.post.core.plot_features.Arrow3D.do_3d_projection","title":"do_3d_projection","text":"<pre><code>do_3d_projection() -&gt; float\n</code></pre> <p>Update the plot to ensure the right projection of the arrow.</p> <p>Returns:</p> <ul> <li> <code>float</code>           \u2013            <p>The minimum z value between the starting and ending positions of the arrow     after the 3d projection.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/post/core/plot_features.py</code> <pre><code>def do_3d_projection(self) -&gt; float:\n    \"\"\"Update the plot to ensure the right projection of the arrow.\n\n    Returns:\n        The minimum z value between the starting and ending positions of the arrow\n            after the 3d projection.\n    \"\"\"\n    xyz0, xyz1 = self._vertices_3d\n    x0, y0, z0 = proj3d.proj_transform(*xyz0, self.axes.M)\n    x1, y1, z1 = proj3d.proj_transform(*xyz1, self.axes.M)\n    self.set_positions((x0, y0), (x1, y1))\n\n    return min(z0, z1)\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/","title":"Problems","text":""},{"location":"reference/gemseo_pymoo/problems/#gemseo_pymoo.problems","title":"problems","text":"<p>Benchmark MDO and optimization problems.</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/","title":"Analytical","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/#gemseo_pymoo.problems.analytical","title":"analytical","text":"<p>Analytical benchmark problems package.</p> <p>Contains multi-objective and discrete variables problems.</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/chankong_haimes/","title":"Chankong haimes","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/chankong_haimes/#gemseo_pymoo.problems.analytical.chankong_haimes","title":"chankong_haimes","text":"<p>Chankong and Haimes multi-objective problem.</p> <p>This module implements the Chankong and Haimes multi-objective problem:</p> <p>.. math::</p> <p>\\begin{aligned}    \\text{minimize the objective function }    &amp; f_1(x, y) = 2 + (x - 2)^2 + (y - 1)^2 \\    &amp; f_2(x, y) = 9x - (y - 1)^2 \\    \\text{with respect to the design variables }&amp;x,\\,y \\    \\text{subject to the general constraints }    &amp; g_1(x, y) = x^2 + y^2 \\leq 225.0\\    &amp; g_2(x, y) = x - 3y + 10 \\leq 0.0\\    \\text{subject to the bound constraints }    &amp; -20.0 \\leq x \\leq 20.\\    &amp; -20.0 \\leq y \\leq 20.    \\end{aligned}</p> <p>Chankong, V., &amp; Haimes, Y. Y. (2008). Multiobjective decision making: theory and methodology. Courier Dover Publications.</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/chankong_haimes/#gemseo_pymoo.problems.analytical.chankong_haimes-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/chankong_haimes/#gemseo_pymoo.problems.analytical.chankong_haimes.ChankongHaimes","title":"ChankongHaimes","text":"<pre><code>ChankongHaimes(\n    lower_bound: float = -20.0,\n    upper_bound: float = 20.0,\n    initial_guess: ndarray | None = None,\n)\n</code></pre> <p>               Bases: <code>OptimizationProblem</code></p> <p>Chankong and Haimes optimization problem.</p> <p>The constructor.</p> <p>Initialize the ChankongHaimes :class:<code>~gemseo.algos.opt_problem.OptimizationProblem</code> by defining the :class:<code>~gemseo.algos.design_space.DesignSpace</code> and the objective and constraints functions.</p> <p>Parameters:</p> <ul> <li> <code>lower_bound</code>               (<code>float</code>, default:                   <code>-20.0</code> )           \u2013            <p>The lower bound (common value to all variables).</p> </li> <li> <code>upper_bound</code>               (<code>float</code>, default:                   <code>20.0</code> )           \u2013            <p>The upper bound (common value to all variables).</p> </li> <li> <code>initial_guess</code>               (<code>ndarray | None</code>, default:                   <code>None</code> )           \u2013            <p>The initial guess for the optimal solution.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/chankong_haimes.py</code> <pre><code>def __init__(\n    self,\n    lower_bound: float = -20.0,\n    upper_bound: float = 20.0,\n    initial_guess: ndarray | None = None,\n) -&gt; None:\n    \"\"\"The constructor.\n\n    Initialize the ChankongHaimes\n    :class:`~gemseo.algos.opt_problem.OptimizationProblem` by defining the\n    :class:`~gemseo.algos.design_space.DesignSpace` and the objective and\n    constraints functions.\n\n    Args:\n        lower_bound: The lower bound (common value to all variables).\n        upper_bound: The upper bound (common value to all variables).\n        initial_guess: The initial guess for the optimal solution.\n    \"\"\"\n    design_space = DesignSpace()\n    design_space.add_variable(\n        \"x\", size=1, lower_bound=lower_bound, upper_bound=upper_bound\n    )\n    design_space.add_variable(\n        \"y\", size=1, lower_bound=lower_bound, upper_bound=upper_bound\n    )\n\n    if initial_guess is None:\n        design_space.set_current_value(zeros(2))\n    else:\n        design_space.set_current_value(initial_guess)\n\n    super().__init__(design_space)\n\n    # Set objective function.\n    self.objective = MDOFunction(\n        self.compute_objective,\n        name=\"changkong_haimes\",\n        f_type=MDOFunction.FunctionType.OBJ,\n        jac=self.compute_objective_jacobian,\n        expr=\"[2 + (x-2)**2 + (y-1)**2, 9*x - (y-1)**2]\",\n        input_names=[\"x\", \"y\"],\n        dim=2,\n    )\n\n    ineq1 = MDOFunction(\n        self.compute_constraint_1,\n        name=\"ineq1\",\n        f_type=MDOFunction.ConstraintType.INEQ,\n        jac=self.compute_constraint_1_jacobian,\n        expr=\"x**2 + y**2 - 225\",\n        input_names=[\"x\", \"y\"],\n        dim=1,\n    )\n    self.add_constraint(ineq1, constraint_type=MDOFunction.ConstraintType.INEQ)\n\n    ineq2 = MDOFunction(\n        self.compute_constraint_2,\n        name=\"ineq2\",\n        f_type=MDOFunction.ConstraintType.INEQ,\n        jac=self.compute_constraint_2_jacobian,\n        expr=\"x - 3*y + 10\",\n        input_names=[\"x\", \"y\"],\n        dim=1,\n    )\n    self.add_constraint(ineq2, constraint_type=MDOFunction.ConstraintType.INEQ)\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/chankong_haimes/#gemseo_pymoo.problems.analytical.chankong_haimes.ChankongHaimes-functions","title":"Functions","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/chankong_haimes/#gemseo_pymoo.problems.analytical.chankong_haimes.ChankongHaimes.compute_constraint_1","title":"compute_constraint_1  <code>staticmethod</code>","text":"<pre><code>compute_constraint_1(design_variables: ndarray) -&gt; ndarray\n</code></pre> <p>Compute the first constraint function.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The first constraint's value.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/chankong_haimes.py</code> <pre><code>@staticmethod\ndef compute_constraint_1(design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the first constraint function.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The first constraint's value.\n    \"\"\"\n    return array([design_variables[0] ** 2 + design_variables[1] ** 2 - 225.0])\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/chankong_haimes/#gemseo_pymoo.problems.analytical.chankong_haimes.ChankongHaimes.compute_constraint_1_jacobian","title":"compute_constraint_1_jacobian  <code>staticmethod</code>","text":"<pre><code>compute_constraint_1_jacobian(\n    design_variables: ndarray,\n) -&gt; ndarray\n</code></pre> <p>Compute the first inequality constraint jacobian.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The gradient of the first constraint function wrt the design variables.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/chankong_haimes.py</code> <pre><code>@staticmethod\ndef compute_constraint_1_jacobian(design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the first inequality constraint jacobian.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The gradient of the first constraint function wrt the design variables.\n    \"\"\"\n    jac = zeros([1, 2])\n    jac[0, 0] = 2 * design_variables[0]\n    jac[0, 1] = 2 * design_variables[1]\n    return jac\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/chankong_haimes/#gemseo_pymoo.problems.analytical.chankong_haimes.ChankongHaimes.compute_constraint_2","title":"compute_constraint_2  <code>staticmethod</code>","text":"<pre><code>compute_constraint_2(design_variables: ndarray) -&gt; ndarray\n</code></pre> <p>Compute the second constraint function.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The second constraint's value.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/chankong_haimes.py</code> <pre><code>@staticmethod\ndef compute_constraint_2(design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the second constraint function.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The second constraint's value.\n    \"\"\"\n    return array([design_variables[0] - 3 * design_variables[1] + 10.0])\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/chankong_haimes/#gemseo_pymoo.problems.analytical.chankong_haimes.ChankongHaimes.compute_constraint_2_jacobian","title":"compute_constraint_2_jacobian  <code>staticmethod</code>","text":"<pre><code>compute_constraint_2_jacobian(\n    design_variables: ndarray,\n) -&gt; ndarray\n</code></pre> <p>Compute the second inequality constraint jacobian.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The gradient of the second constraint function wrt the design variables.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/chankong_haimes.py</code> <pre><code>@staticmethod\ndef compute_constraint_2_jacobian(design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the second inequality constraint jacobian.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The gradient of the second constraint function wrt the design variables.\n    \"\"\"\n    jac = zeros([1, 2])\n    jac[0, 0] = 1.0\n    jac[0, 1] = -3.0\n    return jac\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/chankong_haimes/#gemseo_pymoo.problems.analytical.chankong_haimes.ChankongHaimes.compute_objective","title":"compute_objective  <code>staticmethod</code>","text":"<pre><code>compute_objective(design_variables: ndarray) -&gt; ndarray\n</code></pre> <p>Compute the objectives of the Chankong and Haimes function.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The objective function value.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/chankong_haimes.py</code> <pre><code>@staticmethod\ndef compute_objective(design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the objectives of the Chankong and Haimes function.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The objective function value.\n    \"\"\"\n    obj = zeros(2)\n    obj[0] = (\n        2.0 + (design_variables[0] - 2.0) ** 2 + (design_variables[1] - 1.0) ** 2\n    )\n    obj[1] = 9.0 * design_variables[0] - (design_variables[1] - 1.0) ** 2\n    return obj\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/chankong_haimes/#gemseo_pymoo.problems.analytical.chankong_haimes.ChankongHaimes.compute_objective_jacobian","title":"compute_objective_jacobian  <code>staticmethod</code>","text":"<pre><code>compute_objective_jacobian(\n    design_variables: ndarray,\n) -&gt; ndarray\n</code></pre> <p>Compute the gradient of objective function.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The gradient of the objective functions wrt the design variables.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/chankong_haimes.py</code> <pre><code>@staticmethod\ndef compute_objective_jacobian(design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the gradient of objective function.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The gradient of the objective functions wrt the design variables.\n    \"\"\"\n    jac = zeros([2, 2])\n    jac[0, 0] = 2.0 * (design_variables[0] - 2.0)\n    jac[0, 1] = 2.0 * (design_variables[1] - 1.0)\n    jac[1, 0] = 9.0\n    jac[1, 1] = -2.0 * (design_variables[1] - 1.0)\n    return jac\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/","title":"Knapsack","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack","title":"knapsack","text":"<p>Knapsack problem.</p> <p>This module implements the Knapsack problem.</p> <p>In its simplest form, it states that:</p> <pre><code>*Given a set of items, each with a given weight and value,\ndetermine the number of each item to include in a collection\nso that the total weight is less than or equal to a given weight capacity\nand the total value is as large as possible.*\n</code></pre> <p>.. math::</p> <p>\\begin{aligned}    \\text{maximize the total knapsack value } &amp; \\sum_{i=1}^{n} value_i * x_i \\    \\text{with respect to the design variables }&amp;x_i \\    \\text{subject to the general constraints }    &amp; \\sum_{i=1}^{n} weight_i * x_i \\leq capacity_weight\\    &amp; \\sum_{i=1}^{n} x_i \\leq capacity_items\\    \\text{subject to the search domain }    &amp; x_i \\in \\mathbb{N}    \\end{aligned}</p> <p>Multiple variations of the Knapsack problem can be achieved depending on the inputs provided.</p> <p>Moreover, a multi-objective version of this problem is also available, in which the following new objective function is added to previous formulation:</p> <p>.. math::</p> <p>\\begin{aligned}    \\text{minimize the number of items carried } &amp; \\sum_{i=1}^{n} x_i \\    \\end{aligned}</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.Knapsack","title":"Knapsack","text":"<pre><code>Knapsack(\n    values: ndarray,\n    weights: ndarray,\n    items_ub: ndarray | None = None,\n    binary: bool = True,\n    capacity_weight: float | None = None,\n    capacity_items: int | None = None,\n    initial_guess: ndarray | None = None,\n)\n</code></pre> <p>               Bases: <code>OptimizationProblem</code></p> <p>Generic knapsack optimization problem.</p> <p>Different <code>variations &lt;https://en.wikipedia.org/wiki/List_of_knapsack_problems&gt;</code>_ can be achieved:</p> <ul> <li> <p>0/1 or Binary Knapsack problem:</p> <p>Given a set of :math:<code>n</code> items, each with a weight :math:<code>w_i</code> and a value :math:<code>v_i</code>, and a knapsack with a maximum weight capacity :math:<code>W</code>. Choose which items to pack in order to maximize the total knapsack value while respecting its weight capacity.</p> </li> <li> <p>Unbounded Knapsack problem:</p> <p>With respect to the Binary variant, it removes the restriction that there is only one of each item. This can be achieved by setting the attribute :attr:<code>.binary</code> to False, which will remove the upper bound of the design variables.</p> </li> <li> <p>Bounded Knapsack problem:</p> <p>With respect to the Binary variant, it specifies an upper bound for each item. This can be achieved by providing an array :attr:<code>.items_ub</code> with the upper bound relative to each item.</p> </li> </ul> <p>Moreover, an additional constraint regarding the total number of items can be added. This is achieved through the attribute :attr:<code>.capacity_items</code> and will limit the number of items that fit into the knapsack.</p> <p>The constructor.</p> <p>Initialize the Knapsack :class:<code>~gemseo.algos.opt_problem.OptimizationProblem</code> by defining the :class:<code>~gemseo.algos.design_space.DesignSpace</code> and the objective and constraint functions.</p> <p>The number of items in the problem is deduced from the :attr:<code>.values</code> array.</p> <p>Parameters:</p> <ul> <li> <code>values</code>               (<code>ndarray</code>)           \u2013            <p>The items' values.</p> </li> <li> <code>weights</code>               (<code>ndarray</code>)           \u2013            <p>The items' weights.</p> </li> <li> <code>items_ub</code>               (<code>ndarray | None</code>, default:                   <code>None</code> )           \u2013            <p>The items' upper bounds. If None, an unlimited number of each item is allowed.</p> </li> <li> <code>binary</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>If True, the upper bound of design variables is set to 1.</p> </li> <li> <code>capacity_weight</code>               (<code>float | None</code>, default:                   <code>None</code> )           \u2013            <p>The knapsack weight capacity. If None, the knapsack will have an unlimited weight capacity.</p> </li> <li> <code>capacity_items</code>               (<code>int | None</code>, default:                   <code>None</code> )           \u2013            <p>The knapsack number of items capacity. If None, the knapsack will accept an unlimited total number of items.</p> </li> <li> <code>initial_guess</code>               (<code>ndarray | None</code>, default:                   <code>None</code> )           \u2013            <p>The initial guess for the optimal solution. If None, the initial guess will be an empty knapsack (0, 0, ..., 0).</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>ValueError</code>             \u2013            <p>Either if the provided arrays do not have the same length or if no capacity is provided.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/knapsack.py</code> <pre><code>def __init__(\n    self,\n    values: ndarray,\n    weights: ndarray,\n    items_ub: ndarray | None = None,\n    binary: bool = True,\n    capacity_weight: float | None = None,\n    capacity_items: int | None = None,\n    initial_guess: ndarray | None = None,\n) -&gt; None:\n    \"\"\"The constructor.\n\n    Initialize the Knapsack :class:`~gemseo.algos.opt_problem.OptimizationProblem`\n    by defining the :class:`~gemseo.algos.design_space.DesignSpace` and the\n    objective and constraint functions.\n\n    The number of items in the problem is deduced from the :attr:`.values` array.\n\n    Args:\n        values: The items' values.\n        weights: The items' weights.\n        items_ub: The items' upper bounds.\n            If None, an unlimited number of each item is allowed.\n        binary: If True, the upper bound of design variables is set to 1.\n        capacity_weight: The knapsack weight capacity.\n            If None, the knapsack will have an unlimited weight capacity.\n        capacity_items: The knapsack number of items capacity.\n            If None, the knapsack will accept an unlimited total number of items.\n        initial_guess: The initial guess for the optimal solution.\n            If None, the initial guess will be an empty knapsack (0, 0, ..., 0).\n\n    Raises:\n        ValueError: Either if the provided arrays do not have the same length or\n            if no capacity is provided.\n    \"\"\"\n    # Number of items.\n    n_items = len(values)\n\n    if len(weights) != n_items:\n        msg = (\n            \"weights and values must have the same number of elements! \"\n            f\"{len(weights)} != {n_items}\"\n        )\n        raise ValueError(msg)\n\n    # The knapsack must be constrained.\n    if capacity_weight is None and capacity_items is None:\n        msg = \"You have to provide at least one type of capacity!\"\n        raise ValueError(msg)\n\n    if binary:\n        if items_ub is None:\n            # Binary variant.\n            items_ub = ones(n_items)\n        elif len(items_ub) != n_items:\n            msg = (\n                \"items_ub and values must have the same number of elements! \"\n                f\"{len(items_ub)} != {n_items}\"\n            )\n            raise ValueError(msg)\n        else:\n            LOGGER.warning(\n                \"binary option is ignored because \"\n                \"the items upper bounds were provided!\"\n            )\n\n    if items_ub is None:\n        items_ub = inf\n\n    self.weights = weights\n    self.capacity_items = capacity_items\n    self.capacity_weight = capacity_weight\n\n    self.values = values\n\n    design_space = DesignSpace()\n\n    design_space.add_variable(\n        \"x\",\n        size=n_items,\n        lower_bound=0,\n        upper_bound=items_ub,\n        type_=DesignSpace.DesignVariableType.INTEGER,\n    )\n\n    if initial_guess is None or len(initial_guess) == n_items:\n        design_space.set_current_value(zeros(n_items))\n    else:\n        msg = f\"initial_guess must have {n_items} elements!\"\n        raise ValueError(msg)\n\n    super().__init__(design_space)\n\n    self.objective = MDOFunction(\n        self.compute_knapsack_value,\n        name=\"knapsack\",\n        f_type=MDOFunction.FunctionType.OBJ,\n        expr=\"sum(values * x)\",\n        input_names=[\"x\"],\n        dim=1,\n    )\n\n    # Maximize knapsack value.\n    self.minimize_objective = False\n\n    # Knapsack weight limit.\n    if capacity_weight is not None:\n        ineq_weight = MDOFunction(\n            self._compute_weight_constraint,\n            name=\"weight_surpass\",\n            f_type=MDOFunction.ConstraintType.INEQ,\n            expr=\"sum(weights * x) - capacity_weight\",\n            input_names=[\"x\"],\n            dim=1,\n        )\n        self.add_constraint(\n            ineq_weight, constraint_type=MDOFunction.ConstraintType.INEQ\n        )\n\n    # Knapsack number of items limit.\n    if capacity_items is not None:\n        ineq_items = MDOFunction(\n            self._compute_items_constraint,\n            name=\"items_surpass\",\n            f_type=MDOFunction.ConstraintType.INEQ,\n            expr=\"sum(x) - capacity_items\",\n            input_names=[\"x\"],\n            dim=1,\n        )\n        self.add_constraint(\n            ineq_items, constraint_type=MDOFunction.ConstraintType.INEQ\n        )\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.Knapsack-attributes","title":"Attributes","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.Knapsack.capacity_items","title":"capacity_items  <code>instance-attribute</code>","text":"<pre><code>capacity_items: int = capacity_items\n</code></pre> <p>The knapsack number of items capacity.</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.Knapsack.capacity_weight","title":"capacity_weight  <code>instance-attribute</code>","text":"<pre><code>capacity_weight: float = capacity_weight\n</code></pre> <p>The knapsack weight capacity.</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.Knapsack.values","title":"values  <code>instance-attribute</code>","text":"<pre><code>values: ndarray = values\n</code></pre> <p>The knapsack items' value.</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.Knapsack.weights","title":"weights  <code>instance-attribute</code>","text":"<pre><code>weights: ndarray = weights\n</code></pre> <p>The knapsack items' weight.</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.Knapsack-functions","title":"Functions","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.Knapsack.compute_knapsack_items","title":"compute_knapsack_items  <code>staticmethod</code>","text":"<pre><code>compute_knapsack_items(\n    design_variables: ndarray,\n) -&gt; ndarray\n</code></pre> <p>Compute the knapsack number of items.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The knapsack total number of items.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/knapsack.py</code> <pre><code>@staticmethod\ndef compute_knapsack_items(design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the knapsack number of items.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The knapsack total number of items.\n    \"\"\"\n    return np_sum(design_variables)\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.Knapsack.compute_knapsack_value","title":"compute_knapsack_value","text":"<pre><code>compute_knapsack_value(\n    design_variables: ndarray,\n) -&gt; ndarray\n</code></pre> <p>Compute the knapsack total value.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The knapsack total value.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/knapsack.py</code> <pre><code>def compute_knapsack_value(self, design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the knapsack total value.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The knapsack total value.\n    \"\"\"\n    return atleast_1d(np_sum(self.values * design_variables))\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.Knapsack.compute_knapsack_weight","title":"compute_knapsack_weight","text":"<pre><code>compute_knapsack_weight(\n    design_variables: ndarray,\n) -&gt; ndarray\n</code></pre> <p>Compute the knapsack total weight.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The knapsack total weight.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/knapsack.py</code> <pre><code>def compute_knapsack_weight(self, design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the knapsack total weight.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The knapsack total weight.\n    \"\"\"\n    return np_sum(self.weights * design_variables)\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.MultiObjectiveKnapsack","title":"MultiObjectiveKnapsack","text":"<pre><code>MultiObjectiveKnapsack(\n    values: ndarray,\n    weights: ndarray,\n    items_ub: ndarray | None = None,\n    binary: bool = True,\n    capacity_weight: float | None = None,\n    capacity_items: int | None = None,\n    initial_guess: ndarray | None = None,\n)\n</code></pre> <p>               Bases: <code>Knapsack</code></p> <p>Multi-objective Knapsack optimization problem.</p> <p>With respect to the single-objective :class:<code>.Knapsack</code>, it adds an objective relative to the number of items packed. Therefore, besides maximizing the total knapsack value, one must also minimize the total number of items.</p> <p>All the variations of the :class:<code>.Knapsack</code> problem can still be achieved.</p> <p>The constructor.</p> <p>Initialize the MultiObjectiveKnapsack :class:<code>~gemseo.algos.opt_problem.OptimizationProblem</code> by defining the :class:<code>~gemseo.algos.design_space.DesignSpace</code> and the objective and constraint functions.</p> <p>The number of items in the problem is deduced from the :attr:<code>.values</code> array.</p> <p>Parameters:</p> <ul> <li> <code>values</code>               (<code>ndarray</code>)           \u2013            <p>The items' values.</p> </li> <li> <code>weights</code>               (<code>ndarray</code>)           \u2013            <p>The items' weights.</p> </li> <li> <code>items_ub</code>               (<code>ndarray | None</code>, default:                   <code>None</code> )           \u2013            <p>The items' upper bounds. If None, an unlimited number of each item is allowed.</p> </li> <li> <code>binary</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>If True, the upper bound of design variables is set to 1.</p> </li> <li> <code>capacity_weight</code>               (<code>float | None</code>, default:                   <code>None</code> )           \u2013            <p>The knapsack weight capacity. If None, the knapsack will have an unlimited weight capacity.</p> </li> <li> <code>capacity_items</code>               (<code>int | None</code>, default:                   <code>None</code> )           \u2013            <p>The knapsack number of items capacity. If None, the knapsack will accept an unlimited total number of items.</p> </li> <li> <code>initial_guess</code>               (<code>ndarray | None</code>, default:                   <code>None</code> )           \u2013            <p>The initial guess for the optimal solution. If None, the initial guess will be an empty knapsack (0, 0, ..., 0).</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/knapsack.py</code> <pre><code>def __init__(\n    self,\n    values: ndarray,\n    weights: ndarray,\n    items_ub: ndarray | None = None,\n    binary: bool = True,\n    capacity_weight: float | None = None,\n    capacity_items: int | None = None,\n    initial_guess: ndarray | None = None,\n) -&gt; None:\n    \"\"\"The constructor.\n\n    Initialize the MultiObjectiveKnapsack\n    :class:`~gemseo.algos.opt_problem.OptimizationProblem` by defining the\n    :class:`~gemseo.algos.design_space.DesignSpace` and the objective and\n    constraint functions.\n\n    The number of items in the problem is deduced from the :attr:`.values` array.\n\n    Args:\n        values: The items' values.\n        weights: The items' weights.\n        items_ub: The items' upper bounds.\n            If None, an unlimited number of each item is allowed.\n        binary: If True, the upper bound of design variables is set to 1.\n        capacity_weight: The knapsack weight capacity.\n            If None, the knapsack will have an unlimited weight capacity.\n        capacity_items: The knapsack number of items capacity.\n            If None, the knapsack will accept an unlimited total number of items.\n        initial_guess: The initial guess for the optimal solution.\n            If None, the initial guess will be an empty knapsack (0, 0, ..., 0).\n    \"\"\"\n    super().__init__(\n        values,\n        weights,\n        items_ub,\n        binary,\n        capacity_weight,\n        capacity_items,\n        initial_guess,\n    )\n\n    # Reset minimization goal.\n    self.minimize_objective = True\n\n    # Set objective function.\n    self.objective = MDOFunction(\n        self._compute_objective,\n        name=\"knapsack\",\n        f_type=MDOFunction.FunctionType.OBJ,\n        expr=\"[-sum(values * x), sum(x)]\",\n        input_names=[\"x\"],\n        dim=2,\n    )\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.MultiObjectiveKnapsack-attributes","title":"Attributes","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.MultiObjectiveKnapsack.capacity_items","title":"capacity_items  <code>instance-attribute</code>","text":"<pre><code>capacity_items: int = capacity_items\n</code></pre> <p>The knapsack number of items capacity.</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.MultiObjectiveKnapsack.capacity_weight","title":"capacity_weight  <code>instance-attribute</code>","text":"<pre><code>capacity_weight: float = capacity_weight\n</code></pre> <p>The knapsack weight capacity.</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.MultiObjectiveKnapsack.values","title":"values  <code>instance-attribute</code>","text":"<pre><code>values: ndarray = values\n</code></pre> <p>The knapsack items' value.</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.MultiObjectiveKnapsack.weights","title":"weights  <code>instance-attribute</code>","text":"<pre><code>weights: ndarray = weights\n</code></pre> <p>The knapsack items' weight.</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.MultiObjectiveKnapsack-functions","title":"Functions","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.MultiObjectiveKnapsack.compute_knapsack_items","title":"compute_knapsack_items  <code>staticmethod</code>","text":"<pre><code>compute_knapsack_items(\n    design_variables: ndarray,\n) -&gt; ndarray\n</code></pre> <p>Compute the knapsack number of items.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The knapsack total number of items.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/knapsack.py</code> <pre><code>@staticmethod\ndef compute_knapsack_items(design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the knapsack number of items.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The knapsack total number of items.\n    \"\"\"\n    return np_sum(design_variables)\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.MultiObjectiveKnapsack.compute_knapsack_value","title":"compute_knapsack_value","text":"<pre><code>compute_knapsack_value(\n    design_variables: ndarray,\n) -&gt; ndarray\n</code></pre> <p>Compute the knapsack total value.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The knapsack total value.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/knapsack.py</code> <pre><code>def compute_knapsack_value(self, design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the knapsack total value.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The knapsack total value.\n    \"\"\"\n    return atleast_1d(np_sum(self.values * design_variables))\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.MultiObjectiveKnapsack.compute_knapsack_weight","title":"compute_knapsack_weight","text":"<pre><code>compute_knapsack_weight(\n    design_variables: ndarray,\n) -&gt; ndarray\n</code></pre> <p>Compute the knapsack total weight.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The knapsack total weight.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/knapsack.py</code> <pre><code>def compute_knapsack_weight(self, design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the knapsack total weight.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The knapsack total weight.\n    \"\"\"\n    return np_sum(self.weights * design_variables)\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack-functions","title":"Functions","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/knapsack/#gemseo_pymoo.problems.analytical.knapsack.create_random_knapsack_problem","title":"create_random_knapsack_problem","text":"<pre><code>create_random_knapsack_problem(\n    n_items: int,\n    capacity_level: float = 0.1,\n    binary: bool = True,\n    obj_variant: str = \"single\",\n) -&gt; Knapsack | MultiObjectiveKnapsack\n</code></pre> <p>Create a random :class:<code>.Knapsack</code> problem.</p> <p>One can also create a :class:<code>.MultiObjectiveKnapsack</code> problem by providing :attr:<code>.obj_variant</code> = 'multi'.</p> <p>The value and the weight of the items are integers randomly generated between 1 and 100.</p> <p>Parameters:</p> <ul> <li> <code>n_items</code>               (<code>int</code>)           \u2013            <p>The size of the set of items.</p> </li> <li> <code>capacity_level</code>               (<code>float</code>, default:                   <code>0.1</code> )           \u2013            <p>The percentage of the set of items total weight corresponding to the knapsack capacity.</p> </li> <li> <code>binary</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>If True, only one unit of each item is allowed.</p> </li> <li> <code>obj_variant</code>               (<code>str</code>, default:                   <code>'single'</code> )           \u2013            <p>Single-objective ('single') or multi-objective ('multi') problem.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Knapsack | MultiObjectiveKnapsack</code>           \u2013            <p>An instance of :class:<code>.Knapsack</code> or :class:<code>.MultiObjectiveKnapsack</code> depending     on the :attr:<code>.obj_variant</code> provided.</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>ValueError</code>             \u2013            <p>Either if the number of items is not a positive integer or if the capacity_level is outside the range (0, 1).</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/knapsack.py</code> <pre><code>def create_random_knapsack_problem(\n    n_items: int,\n    capacity_level: float = 0.1,\n    binary: bool = True,\n    obj_variant: str = \"single\",\n) -&gt; Knapsack | MultiObjectiveKnapsack:\n    \"\"\"Create a random :class:`.Knapsack` problem.\n\n    One can also create a :class:`.MultiObjectiveKnapsack` problem by providing\n    :attr:`.obj_variant` = 'multi'.\n\n    The value and the weight of the items are integers randomly generated\n    between 1 and 100.\n\n    Args:\n        n_items: The size of the set of items.\n        capacity_level: The percentage of the set of items total weight\n            corresponding to the knapsack capacity.\n        binary: If True, only one unit of each item is allowed.\n        obj_variant: Single-objective ('single') or multi-objective ('multi') problem.\n\n    Returns:\n        An instance of :class:`.Knapsack` or :class:`.MultiObjectiveKnapsack` depending\n            on the :attr:`.obj_variant` provided.\n\n    Raises:\n        ValueError: Either if the number of items is not a positive integer or if the\n            capacity_level is outside the range (0, 1).\n    \"\"\"\n    if n_items &lt; 1:\n        msg = \"Number of items must be a positive number!\"\n        raise ValueError(msg)\n\n    if not 0.0 &lt; capacity_level &lt; 1.0:\n        msg = \"capacity_level must be in the interval (0, 1)!\"\n        raise ValueError(msg)\n\n    rng = default_rng(1)\n    values = rng.integers(1, 100, size=n_items)\n    weights = rng.integers(1, 100, size=n_items)\n\n    capacity_weight = capacity_level * sum(weights)\n\n    if obj_variant == \"multi\":\n        return MultiObjectiveKnapsack(values, weights, None, binary, capacity_weight)\n\n    return Knapsack(values, weights, None, binary, capacity_weight)\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/viennet/","title":"Viennet","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/viennet/#gemseo_pymoo.problems.analytical.viennet","title":"viennet","text":"<p>Viennet multi-objective problem.</p> <p>This module implements the Viennet multi-objective unconstrained problem:</p> <p>.. math::</p> <p>\\begin{aligned}    \\text{minimize the objective function }    &amp; f_1(x, y) = (x^2 + y^2) / 2 + sin(x^2 + y^2) \\    &amp; f_2(x, y) = (3x - 2y + 4)^2 / 8 + (x - y + 1)^2 / 27 + 15 \\    &amp; f_3(x, y) = 1 / (x^2 + y^2 + 1) - 1.1 e^{-(x^2 + y^2)} \\    \\text{with respect to the design variables }&amp;x,\\,y \\    \\text{subject to the bound constraints }    &amp; -3.0 \\leq x \\leq 3.0\\    &amp; -3.0 \\leq y \\leq 3.0    \\end{aligned}</p>"},{"location":"reference/gemseo_pymoo/problems/analytical/viennet/#gemseo_pymoo.problems.analytical.viennet-classes","title":"Classes","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/viennet/#gemseo_pymoo.problems.analytical.viennet.Viennet","title":"Viennet","text":"<pre><code>Viennet(\n    lower_bound: float = -3.0,\n    upper_bound: float = 3.0,\n    initial_guess: ndarray | None = None,\n)\n</code></pre> <p>               Bases: <code>OptimizationProblem</code></p> <p>Viennet optimization problem.</p> <p>The constructor.</p> <p>Initialize the Viennet :class:<code>~gemseo.algos.opt_problem.OptimizationProblem</code> by defining the :class:<code>~gemseo.algos.design_space.DesignSpace</code> and the objective function.</p> <p>Parameters:</p> <ul> <li> <code>lower_bound</code>               (<code>float</code>, default:                   <code>-3.0</code> )           \u2013            <p>The lower bound (common value to all variables).</p> </li> <li> <code>upper_bound</code>               (<code>float</code>, default:                   <code>3.0</code> )           \u2013            <p>The upper bound (common value to all variables).</p> </li> <li> <code>initial_guess</code>               (<code>ndarray | None</code>, default:                   <code>None</code> )           \u2013            <p>The initial guess for the optimal solution. If None, the initial guess will be (0., 0.).</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/viennet.py</code> <pre><code>def __init__(\n    self,\n    lower_bound: float = -3.0,\n    upper_bound: float = 3.0,\n    initial_guess: ndarray | None = None,\n) -&gt; None:\n    \"\"\"The constructor.\n\n    Initialize the Viennet :class:`~gemseo.algos.opt_problem.OptimizationProblem`\n    by defining the :class:`~gemseo.algos.design_space.DesignSpace` and the\n    objective function.\n\n    Args:\n        lower_bound: The lower bound (common value to all variables).\n        upper_bound: The upper bound (common value to all variables).\n        initial_guess: The initial guess for the optimal solution.\n            If None, the initial guess will be (0., 0.).\n    \"\"\"\n    design_space = DesignSpace()\n    design_space.add_variable(\n        \"x\", size=1, lower_bound=lower_bound, upper_bound=upper_bound\n    )\n    design_space.add_variable(\n        \"y\", size=1, lower_bound=lower_bound, upper_bound=upper_bound\n    )\n\n    if initial_guess is None:\n        design_space.set_current_value(zeros(2))\n    else:\n        design_space.set_current_value(initial_guess)\n\n    super().__init__(design_space)\n\n    # Set objective function.\n    self.objective = MDOFunction(\n        self.compute_objective,\n        name=\"viennet\",\n        f_type=MDOFunction.FunctionType.OBJ,\n        jac=self.compute_objective_jacobian,\n        expr=\"[(x**2 + y**2) / 2 + sin(x**2 + y**2), 9*x - (y-1)**2,\"\n        \"(3*x - 2*y + 4)**2 / 8 + (x - y + 1)^2 / 27 + 15,\"\n        \"1 / (x**2 + y**2 + 1) - 1.1*exp(-(x**2 + y**2))]\",\n        input_names=[\"x\", \"y\"],\n        dim=3,\n    )\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/viennet/#gemseo_pymoo.problems.analytical.viennet.Viennet-functions","title":"Functions","text":""},{"location":"reference/gemseo_pymoo/problems/analytical/viennet/#gemseo_pymoo.problems.analytical.viennet.Viennet.compute_objective","title":"compute_objective  <code>staticmethod</code>","text":"<pre><code>compute_objective(design_variables: ndarray) -&gt; ndarray\n</code></pre> <p>Compute the objectives of the Viennet function.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The objective function value.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/viennet.py</code> <pre><code>@staticmethod\ndef compute_objective(design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the objectives of the Viennet function.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The objective function value.\n    \"\"\"\n    x, y = design_variables\n    xy2 = x**2 + y**2\n\n    obj = zeros(3)\n    obj[0] = 0.5 * xy2 + np_sin(xy2)\n    obj[1] = (3.0 * x - 2 * y + 4.0) ** 2 / 8.0 + (x - y + 1.0) ** 2 / 27.0 + 15.0\n    obj[2] = 1.0 / (xy2 + 1.0) - 1.1 * np_exp(-xy2)\n    return obj\n</code></pre>"},{"location":"reference/gemseo_pymoo/problems/analytical/viennet/#gemseo_pymoo.problems.analytical.viennet.Viennet.compute_objective_jacobian","title":"compute_objective_jacobian  <code>staticmethod</code>","text":"<pre><code>compute_objective_jacobian(\n    design_variables: ndarray,\n) -&gt; ndarray\n</code></pre> <p>Compute the gradient of objective function.</p> <p>Parameters:</p> <ul> <li> <code>design_variables</code>               (<code>ndarray</code>)           \u2013            <p>The design variables vector.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ndarray</code>           \u2013            <p>The gradient of the objective functions wrt the design variables.</p> </li> </ul> Source code in <code>src/gemseo_pymoo/problems/analytical/viennet.py</code> <pre><code>@staticmethod\ndef compute_objective_jacobian(design_variables: ndarray) -&gt; ndarray:\n    \"\"\"Compute the gradient of objective function.\n\n    Args:\n        design_variables: The design variables vector.\n\n    Returns:\n        The gradient of the objective functions wrt the design variables.\n    \"\"\"\n    x, y = design_variables\n    xy2 = x**2 + y**2\n\n    jac = zeros([3, 2])\n    jac[0, 0] = x + 2.0 * x * np_cos(xy2)\n    jac[0, 1] = y + 2.0 * y * np_cos(xy2)\n    jac[1, 0] = 3.0 * (3.0 * x - 2 * y + 4.0) / 4.0 + 2 * (x - y + 1.0) / 27.0\n    jac[1, 1] = -2.0 * (3.0 * x - 2 * y + 4.0) / 4.0 - 2 * (x - y + 1.0) / 27.0\n    jac[2, 0] = -2.0 * x * (xy2 + 1.0) ** (-2) + 1.1 * 2 * x * np_exp(-xy2)\n    jac[2, 1] = -2.0 * y * (xy2 + 1.0) ** (-2) + 1.1 * 2 * y * np_exp(-xy2)\n    return jac\n</code></pre>"},{"location":"user_guide/","title":"User guide","text":""},{"location":"user_guide/#user-guide","title":"User guide","text":""}]}